<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>实现自动更新Blog(GitHub Actions+Hexo deploy)</title>
    <url>/Auto-update-Blog(Github-Actions+Hexo-Deploy)/</url>
    <content><![CDATA[<h1 id="坑已挖，等待填补"><a href="#坑已挖，等待填补" class="headerlink" title="坑已挖，等待填补"></a>坑已挖，等待填补</h1><h1 id="To-be-complete"><a href="#To-be-complete" class="headerlink" title="To be complete"></a>To be complete</h1>]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux自动登录</title>
    <url>/Auto-login-Arch/</url>
    <content><![CDATA[<h1 id="Arch-Linux怎么自动登录，而且是免密的，应该会有一些人会这样想，毕竟如果用户名的密码过长，而且密码错以后又要重输，想必是让人血压升高的问题。今天，教程来了"><a href="#Arch-Linux怎么自动登录，而且是免密的，应该会有一些人会这样想，毕竟如果用户名的密码过长，而且密码错以后又要重输，想必是让人血压升高的问题。今天，教程来了" class="headerlink" title="Arch Linux怎么自动登录，而且是免密的，应该会有一些人会这样想，毕竟如果用户名的密码过长，而且密码错以后又要重输，想必是让人血压升高的问题。今天，教程来了"></a>Arch Linux怎么自动登录，而且是免密的，应该会有一些人会这样想，毕竟如果用户名的密码过长，而且密码错以后又要重输，想必是让人血压升高的问题。今天，教程来了</h1><h1 id="当然免密登录也会出现一些安全问题"><a href="#当然免密登录也会出现一些安全问题" class="headerlink" title="当然免密登录也会出现一些安全问题"></a>当然免密登录也会出现一些安全问题</h1><h1 id="本教程具有一定的时限性，具体操作以Arch-Wiki为准！"><a href="#本教程具有一定的时限性，具体操作以Arch-Wiki为准！" class="headerlink" title="本教程具有一定的时限性，具体操作以Arch Wiki为准！"></a>本教程具有一定的时限性，具体操作以Arch Wiki为准！</h1><h1 id="参考Arch-Wiki-Getty"><a href="#参考Arch-Wiki-Getty" class="headerlink" title="参考Arch Wiki:Getty"></a>参考Arch Wiki:<a href="https://wiki.archlinuxcn.org/wiki/Getty">Getty</a></h1><h1 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S util-linux</span><br></pre></td></tr></table></figure>
<p>若已安装可不用重新安装</p>
<h2 id="写入一个systemd服务文件"><a href="#写入一个systemd服务文件" class="headerlink" title="写入一个systemd服务文件:"></a>写入一个systemd服务文件:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nvim /etc/systemd/system/getty@tty1.service.d/override.conf</span><br></pre></td></tr></table></figure>
<h3 id="若没有getty-1-service-d文件夹，请创建"><a href="#若没有getty-1-service-d文件夹，请创建" class="headerlink" title="若没有getty@1.service.d文件夹，请创建:"></a>若没有<code>getty@1.service.d</code>文件夹，请创建:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir /etc/systemd/system/getty@tty1.service.d</span><br></pre></td></tr></table></figure>
<p>将以下代码写入&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;<a href="mailto:&#x67;&#101;&#116;&#116;&#121;&#x40;&#116;&#116;&#121;&#x31;&#46;&#115;&#101;&#114;&#118;&#105;&#x63;&#x65;&#46;&#100;">&#x67;&#101;&#116;&#116;&#121;&#x40;&#116;&#116;&#121;&#x31;&#46;&#115;&#101;&#114;&#118;&#105;&#x63;&#x65;&#46;&#100;</a>&#x2F;override.conf中:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Service]</span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=-/usr/bin/agetty --autologin username --noclear %I $TERM</span><br></pre></td></tr></table></figure>
<p><strong>注:这里的username要更改为你的用户名,不能照抄<del>别问我是怎么知道的</del></strong></p>
<p><strong><del>若你不知道你的用户名，请使用以下命令来查看</del></strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure>
<h2 id="启动该服务"><a href="#启动该服务" class="headerlink" title="启动该服务"></a>启动该服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable getty@tty1</span><br></pre></td></tr></table></figure>

<h1 id="抢救方法-如果没有照抄上面的代码-可以不看"><a href="#抢救方法-如果没有照抄上面的代码-可以不看" class="headerlink" title="抢救方法(如果没有照抄上面的代码,可以不看)"></a>抢救方法(如果没有照抄上面的代码,可以不看)</h1><p>我们先解析一下服务文件名,从”getty@tty1”中，我们得知这个服务是针对tty1的，对其他tty不受影响(如tty2)</p>
<h2 id="切换到其他tty"><a href="#切换到其他tty" class="headerlink" title="切换到其他tty"></a>切换到其他tty</h2><p>按住<code>Ctrl+shift+&lt;F2&gt;</code>切换到tty2，然后登录用户，修改刚刚的配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nvim /etc/systemd/system/getty@tty1.service.d/override.conf</span><br></pre></td></tr></table></figure>
<p>然后将<code>username</code>改为你的用户名</p>
<h1 id="来看看作者是怎么修的"><a href="#来看看作者是怎么修的" class="headerlink" title="来看看作者是怎么修的"></a><del>来看看作者是怎么修的</del></h1><p>重启进入liveCD，挂载Arch Linux所在的硬盘，然后修改配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /mnt/etc/systemd/system/getty@tty1.service.d/override.conf</span><br></pre></td></tr></table></figure>
<p>将<code>username</code>修改为我的用户名，重启</p>
]]></content>
      <categories>
        <category>Arch Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>新年快乐！</title>
    <url>/Happy-New-Year2024/</url>
    <content><![CDATA[<h1 id="Happy-New-Year"><a href="#Happy-New-Year" class="headerlink" title="Happy New Year!"></a>Happy New Year!</h1><h1 id="本Blog在此祝大家新年快乐！"><a href="#本Blog在此祝大家新年快乐！" class="headerlink" title="本Blog在此祝大家新年快乐！"></a>本Blog在此祝大家新年快乐！</h1><h1 id="再见2023，你好2024！"><a href="#再见2023，你好2024！" class="headerlink" title="再见2023，你好2024！"></a>再见2023，你好2024！</h1><h1 id="Goodbye-2023-Hello2024"><a href="#Goodbye-2023-Hello2024" class="headerlink" title="Goodbye 2023,Hello2024!"></a>Goodbye 2023,Hello2024!</h1>]]></content>
      <categories>
        <category>Happy New Year</category>
      </categories>
      <tags>
        <tag>Happy New Year</tag>
      </tags>
  </entry>
  <entry>
    <title>提取Cloudflare Zero Trust节点</title>
    <url>/Get-Cloudflare-node/</url>
    <content><![CDATA[<h1 id="本文记录作者提取Cloudflare-Zero-Trust的节点的过程以及所用的工具"><a href="#本文记录作者提取Cloudflare-Zero-Trust的节点的过程以及所用的工具" class="headerlink" title="本文记录作者提取Cloudflare Zero Trust的节点的过程以及所用的工具"></a>本文记录作者提取Cloudflare Zero Trust的节点的过程以及所用的工具</h1><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>首先需要你有一个Cloudflare账号，并且有Zero Trust，没有可以看<a href="https://blog-zjp.cn.eu.org/Request-Cloudflare-Warp/">这篇文章</a></p>
<h1 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h1><h2 id="首先介绍一下作者的设备："><a href="#首先介绍一下作者的设备：" class="headerlink" title="首先介绍一下作者的设备："></a>首先介绍一下作者的设备：</h2><ul>
<li>OS:Arch Linux</li>
<li>内核:linux-zen6.7.3</li>
<li>Clash-meta 1.18.1-2</li>
</ul>
<p>由于Cloudflare Zero Trust是使用WireGuard协议，所以我们需要使用一个支持WireGuard协议的客户端，可以更换为其他的<br>本文以Arch Linux为例</p>
<h2 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h2><p>介绍一下作者提取节点时所用到的工具：</p>
<ul>
<li><a href="https://gitlab.com/PILIHU/Warp2Clash">Warp2Clash by CMLiussss</a></li>
<li><a href="https://gitlab.com/Misaka-blog/warp-script/">优选IP脚本 by MisakaNo</a></li>
<li><a href="https://replit.com/@misaka-blog/wgcf-profile-generator">提取<code>PrivateKey</code>和<code>PublicKey</code>的工具 by MisakaNo(WGCF)</a><br>或</li>
<li><a href="https://replit.com/@misaka-blog/warpgo-profile-generator">提取<code>PrivateKey</code>和<code>PublicKey</code>的工具 by MisakaNo(Warp-go)</a></li>
</ul>
<h2 id="开始操作-1"><a href="#开始操作-1" class="headerlink" title="开始操作"></a>开始操作</h2><p>首先你需要提取出来你的Zero Trust的<code>PrivateKey</code>和<code>PublicKey</code>，没有的话<a href="#%E9%A6%96%E5%85%88">可以看这里</a><br>将Warp2Clash脚本下载下来：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N -P Warp2Clash https://raw.githubusercontent.com/cmliu/Warp2Clash/main/W2C_start.sh &amp;&amp; cd Warp2Clash &amp;&amp; chmod +x W2C_start.sh</span><br></pre></td></tr></table></figure>
<h3 id="若你有WARP账户许可证密钥，可以使用以下命令："><a href="#若你有WARP账户许可证密钥，可以使用以下命令：" class="headerlink" title="若你有WARP账户许可证密钥，可以使用以下命令："></a>若你有WARP账户许可证密钥，可以使用以下命令：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./W2C_start.sh &#123;WARP账户许可证密钥&#125;</span><br></pre></td></tr></table></figure>
<h3 id="如果你有PrivateKey和PublicKey的话可以使用以下命令："><a href="#如果你有PrivateKey和PublicKey的话可以使用以下命令：" class="headerlink" title="如果你有PrivateKey和PublicKey的话可以使用以下命令："></a>如果你有<code>PrivateKey</code>和<code>PublicKey</code>的话可以使用以下命令：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./W2C_start.sh &#123;PrivateKey&#125; &#123;PublicKey&#125; &#123;IPv6&#125;</span><br></pre></td></tr></table></figure>
<!-- <mark>注意：这个{IPv6}是必须要有的，否则将不会生成clash订阅文件！</mark> -->
<h3 id="获取PrivateKey和PublicKey"><a href="#获取PrivateKey和PublicKey" class="headerlink" title="获取PrivateKey和PublicKey"></a>获取<code>PrivateKey</code>和<code>PublicKey</code></h3><h4 id="首先打开提取工具，然后按照提示填写，Zero-Trust用户选择“3”，然后访问网站并且将token复制到控制台回车，然后等待即可获取到PrivateKey和PublicKey，保留备用"><a href="#首先打开提取工具，然后按照提示填写，Zero-Trust用户选择“3”，然后访问网站并且将token复制到控制台回车，然后等待即可获取到PrivateKey和PublicKey，保留备用" class="headerlink" title="首先打开提取工具，然后按照提示填写，Zero Trust用户选择“3”，然后访问网站并且将token复制到控制台回车，然后等待即可获取到PrivateKey和PublicKey，保留备用"></a>首先打开<a href="https://replit.com/@misaka-blog/wgcf-profile-generator">提取工具</a>，然后按照提示填写，Zero Trust用户选择“3”，然后访问网站并且将token复制到控制台回车，然后等待即可获取到<code>PrivateKey</code>和<code>PublicKey</code>，保留备用</h4><h4 id="优选IP，将优选IP脚本下载下来："><a href="#优选IP，将优选IP脚本下载下来：" class="headerlink" title="优选IP，将优选IP脚本下载下来："></a>优选IP，将<a href="https://gitlab.com/Misaka-blog/warp-script/">优选IP脚本</a>下载下来：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N https://gitlab.com/Misaka-blog/warp-script/-/raw/main/files/warp-yxip/warp-yxip.sh</span><br></pre></td></tr></table></figure>
<p>然后为脚本添加运行权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x ./warp-yxip.sh</span><br></pre></td></tr></table></figure>
<p>然后执行脚本：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./warp-yxip.sh</span><br></pre></td></tr></table></figure>
<p>在菜单中输入2并且回车，等待执行结果出来以后将列表中的第一个中”[]”中的IP地址即可<br><mark>注意：这必须要在断开梯子以后才能执行！否则会导致测试结果不准确或者无效！</mark></p>
<h4 id="到刚刚下载的Warp2Clash目录，运行脚本："><a href="#到刚刚下载的Warp2Clash目录，运行脚本：" class="headerlink" title="到刚刚下载的Warp2Clash目录，运行脚本："></a>到刚刚下载的Warp2Clash目录，运行脚本：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./W2C_start.sh &#123;PrivateKey&#125; &#123;PublicKey&#125; &#123;IPv6&#125;</span><br></pre></td></tr></table></figure>
<p>此处的“{PrivateKey} {PublicKey}”是之前获取到的；{IPv6}是刚刚优选出来的IPv6。</p>
<h4 id="最终会打印出成功字样的语句，并且将文件保存到Warp2clash-yaml中。"><a href="#最终会打印出成功字样的语句，并且将文件保存到Warp2clash-yaml中。" class="headerlink" title="最终会打印出成功字样的语句，并且将文件保存到Warp2clash.yaml中。"></a>最终会打印出成功字样的语句，并且将文件保存到Warp2clash.yaml中。</h4><h3 id="操作结束"><a href="#操作结束" class="headerlink" title="操作结束"></a>操作结束</h3><h3 id="若想导入到Clash-meta中，可以将文件放进-etc-clash-meta中，也可以自定义存放路径，记住就好。"><a href="#若想导入到Clash-meta中，可以将文件放进-etc-clash-meta中，也可以自定义存放路径，记住就好。" class="headerlink" title="若想导入到Clash-meta中，可以将文件放进&#x2F;etc&#x2F;clash-meta中，也可以自定义存放路径，记住就好。"></a>若想导入到Clash-meta中，可以将文件放进&#x2F;etc&#x2F;clash-meta中，也可以自定义存放路径，记住就好。</h3><p>然后编辑&#x2F;etc&#x2F;clash-meta&#x2F;config.yaml：<br>在<code>proxy-providers</code>中添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name:</span><br><span class="line">    type: file</span><br><span class="line">    path: /path/to/Warp2Clash.yaml</span><br><span class="line">    health-check:</span><br><span class="line">      enable: true</span><br><span class="line">      interval: 36000</span><br><span class="line">      url: https://cp.cloudflare.com/generate_204</span><br></pre></td></tr></table></figure>
<p><mark>记住要缩进！</mark><br><mark>记住在groups中启用该配置</mark></p>
<h2 id="然后使用以下命令检查配置是否正确："><a href="#然后使用以下命令检查配置是否正确：" class="headerlink" title="然后使用以下命令检查配置是否正确："></a>然后使用以下命令检查配置是否正确：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clash-meta -t -d /path/to/clash-meta # 这里的路径要是clash-meta的配置文件所在路径不需要加入文件名</span><br></pre></td></tr></table></figure>
<h1 id="重载配置文件即可使用"><a href="#重载配置文件即可使用" class="headerlink" title="重载配置文件即可使用"></a>重载配置文件即可使用</h1>]]></content>
      <categories>
        <category>白嫖</category>
      </categories>
      <tags>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>实现自动更新Blog(actions-gh-page)</title>
    <url>/Auto-update-Blog(GitHub%20Actions+actions-gh-page)/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>群友“竹林里有冰”的Blog有一个部署方案，如下：<br><a href="https://zhul.in/2022/11/04/my-blog-plan/">我的博客部署方案</a></p>
<h1 id="开始码GitHub-Actions代码"><a href="#开始码GitHub-Actions代码" class="headerlink" title="开始码GitHub Actions代码"></a>开始码GitHub Actions代码</h1><p>如果不想写的话可以借鉴：<br>[^1] <a href="https://github.com/PILIHU2022/PILIHU2022.github.io/blob/main/.github/workflows/deploy.yaml">PILIHU2022.github.io&#x2F;Actions</a><br>[^2] <a href="https://github.com/zhullyb/zhullyb.github.io/blob/master/.github/workflows/deploy.yml">竹林里有冰的代码</a><br>[^1]: 我的Github Blog是直接部署到GitHub，所以省略了竹林里有冰的一些代码，可看注释掉的代码<br>[^2]: 这是竹林里有冰的代码，部署到VPS中</p>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>由于GitHub Actions没法使用Ubuntu的apt包管，所以只能使用<code>actions/nodejs</code>，使用@来指定版本，我这里指定的是version 3中的Node.js 21版本，代码中的<code>actions/checkout</code>只用于切换到该仓库;</p>
<h3 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h3><p> 你需要将你本地仓库中的package.json添加到GitHub仓库中，代码中是这样的:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">       <span class="attr">run:</span> </span><br><span class="line">         <span class="string">npm</span> <span class="string">install;</span> <span class="comment"># 分号不可省略，否则将会被识别成一条命令</span></span><br><span class="line">         <span class="string">npm</span> <span class="string">update</span> <span class="comment"># 更新安装的软件（Hexo等）</span></span><br></pre></td></tr></table></figure>

<h2 id="为每个文件重新设定最后修改时间"><a href="#为每个文件重新设定最后修改时间" class="headerlink" title="为每个文件重新设定最后修改时间"></a>为每个文件重新设定最后修改时间</h2><blockquote>
<p>这一步其实是挺重要的，Hexo框架生成每篇文章的最后修改时间的依据是该文件的最后修改时间，而对于 Github Action 的容器来说，每一个文件都刚刚被下载下来，都是最新的，这就会导致你的每一篇文章每次部署时都会被认为刚才修改过。<br>我们这边可以直接使用 git 记录的时间来作为文件的最后修改时间。</p>
</blockquote>
<h2 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h2><p><del>Blog基本都是用来给自己看的</del><br>所以时区当然要设置成中国标准时间（东八区）<br>使用</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">export</span> <span class="string">=</span> <span class="string">TZ=&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="生成网页"><a href="#生成网页" class="headerlink" title="生成网页"></a>生成网页</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">yarn</span> <span class="string">build</span></span><br></pre></td></tr></table></figure>
<p>如果不需要部署到VPS的到此处就可以了</p>
<h1 id="以下是使用GitHub-Pages来更新Blog（该段未完成）"><a href="#以下是使用GitHub-Pages来更新Blog（该段未完成）" class="headerlink" title="以下是使用GitHub Pages来更新Blog（该段未完成）"></a>以下是使用GitHub Pages来更新Blog（该段未完成）</h1><p>若想部署到VPS，参考<a href="#Deploy-to-VPS">部署到VPS</a></p>
<p>Q:为什么我已经将GitHub Actions搞定了，且将博文上传至GitHub仓库了，但是没有更新，GitHub Actions也没有报错<br>A:请检查你的GitHub Pages设置（位置在Settings &gt; Pages）中的“Build and deployment”，在source中选择Deploy from a branch</p>
<h1 id="将Blog部署到VPS"><a href="#将Blog部署到VPS" class="headerlink" title="将Blog部署到VPS"></a>将Blog部署到VPS</h1>]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux安装教程(BIOS)</title>
    <url>/How-to-install-Arch(BIOS)/</url>
    <content><![CDATA[<h1 id="本文介绍Arch-Linux安装，以BIOS方式为例"><a href="#本文介绍Arch-Linux安装，以BIOS方式为例" class="headerlink" title="本文介绍Arch Linux安装，以BIOS方式为例"></a>本文介绍Arch Linux安装，以BIOS方式为例</h1><h1 id="本文所输入的命令均可用Tab键补全"><a href="#本文所输入的命令均可用Tab键补全" class="headerlink" title="本文所输入的命令均可用Tab键补全"></a><em>本文所输入的命令均可用Tab键补全</em></h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="Arch-Linux官方安装指南"><a href="#Arch-Linux官方安装指南" class="headerlink" title="Arch Linux官方安装指南"></a><a href="https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">Arch Linux官方安装指南</a></h2><h3 id="Arch-Linux镜像下载地址USTC，2023-07-01"><a href="#Arch-Linux镜像下载地址USTC，2023-07-01" class="headerlink" title="Arch Linux镜像下载地址USTC，2023.07.01"></a><a href="https://mirrors.ustc.edu.cn/archlinux/iso/2023.07.01/archlinux-2023.07.01-x86_64.iso">Arch Linux镜像下载地址USTC，2023.07.01</a></h3><h1 id="注意：-Arch-Linux-安装镜像不支持安全启动（Secure-Boot）注意：-Arch-Linux-安装镜像不支持安全启动（Secure-Boot）-详见wiki"><a href="#注意：-Arch-Linux-安装镜像不支持安全启动（Secure-Boot）注意：-Arch-Linux-安装镜像不支持安全启动（Secure-Boot）-详见wiki" class="headerlink" title="注意： Arch Linux 安装镜像不支持安全启动（Secure Boot）注意： Arch Linux 安装镜像不支持安全启动（Secure Boot）,详见wiki"></a>注意： Arch Linux 安装镜像不支持安全启动（Secure Boot）<a href="https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">注意： Arch Linux 安装镜像不支持安全启动（Secure Boot）,详见wiki</a></h1><h1 id="前面说了一堆废话现在开始实操"><a href="#前面说了一堆废话现在开始实操" class="headerlink" title="前面说了一堆废话现在开始实操"></a><del>前面说了一堆废话现在开始实操</del></h1><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>启动后，先禁用reflector服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop reflector</span><br></pre></td></tr></table></figure>
<p>这个服务主要是从Arch Linux Mirror Status 页面获取最新的镜像列表，然后筛选出最新的镜像并按速度排序，最后将结果写入到 &#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist 文件。 <del>但它很鸡肋</del>，手动添加镜像站会更好<br><a href="https://wiki.archlinuxcn.org/wiki/Reflector">更多关于该服务请见Wiki</a></p>
<h4 id="添加的镜像站主要是USTC的镜像站或者清华镜像站"><a href="#添加的镜像站主要是USTC的镜像站或者清华镜像站" class="headerlink" title="添加的镜像站主要是USTC的镜像站或者清华镜像站"></a>添加的镜像站主要是USTC的镜像站或者清华镜像站</h4><h5 id="如果不想手动安装Arch的话可以使用archinstall"><a href="#如果不想手动安装Arch的话可以使用archinstall" class="headerlink" title="如果不想手动安装Arch的话可以使用archinstall:"></a>如果不想手动安装Arch的话可以使用archinstall:</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">archinstall</span><br></pre></td></tr></table></figure>
<p><a href="https://wiki.archlinuxcn.org/wiki/Archinstall">详见Wiki</a></p>
<h2 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip link</span><br></pre></td></tr></table></figure>
<blockquote>
<p>要连接到网络：<br>        有线以太网 —— 连接网线。<br>        WiFi —— 使用 <a href="https://wiki.archlinuxcn.org/wiki/Iwd#iwctl">iwctl</a> 验证无线网络。<br>        移动宽带调制解调器（移动网卡） - 使用 <a href="https://wiki.archlinux.org/title/mmcli">mmcli</a> 实用程序连接到移动网络。</p>
</blockquote>
<blockquote>
<p>配置网络连接：<br>        <a href="https://wiki.archlinuxcn.org/wiki/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE#DHCP">DHCP</a>：对于有线以太网、无线局域网（WLAN）和无线广域网（WWAN）网络接口来说，动态 IP 地址和 DNS 服务器分配（由 <a href="https://wiki.archlinuxcn.org/wiki/Systemd-networkd">systemd-networkd</a> 和 <a href="https://wiki.archlinux.org/title/systemd-resolved">systemd-resolved</a> 提供功能）能够开箱即用。<br>        静态 IP 地址：按照静态 IP 地址进行操作。</p>
</blockquote>
<blockquote>
<p>用 <a href="https://wiki.archlinuxcn.org/wiki/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE#Ping">ping</a> 检查网络连接：<br>   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping archlinux.org</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="更新系统时间"><a href="#更新系统时间" class="headerlink" title="更新系统时间"></a>更新系统时间</h2><blockquote>
<p>在 Live 环境中<a href="https://wiki.archlinuxcn.org/wiki/Systemd-timesyncd">systemd-timesyncd</a>默认启用，建立互联网连接后，时间将自动同步。</p>
</blockquote>
<p>使用<a href="https://man.archlinux.org/man/timedatectl.1">timedatectl(1)</a>确保系统时间是准确的： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure>
<p>即使时间不对也不要慌张: )</p>
<h2 id="查看设备名"><a href="#查看设备名" class="headerlink" title="查看设备名"></a>查看设备名</h2><p>使用<a href="https://wiki.archlinuxcn.org/wiki/Lsblk">lsblk</a>来查看设备名(&#x2F;dev&#x2F;sda、&#x2F;dev&#x2F;nvme0n1等等)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsblk -l</span><br></pre></td></tr></table></figure>
<p>或使用fdisk来查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk -l#(小写字母l)</span><br></pre></td></tr></table></figure>
<p>结果中以 rom、loop 或者 airoot 结尾的设备可以被忽略。 </p>
<blockquote>
<p>提示：在分区之前，请检查 NVMe 驱动器和 Advanced Format 硬盘是否使用了 最佳逻辑扇区大小。但注意更改逻辑扇区大小后可能导致在Windows系统中出现兼容性问题。</p>
</blockquote>
<h2 id="建立分区"><a href="#建立分区" class="headerlink" title="建立分区"></a>建立分区</h2><p>使用<a href="https://wiki.archlinuxcn.org/wiki/Fdisk">fdisk</a>来修改分区表：<br>此处为&#x2F;dev&#x2F;sda、&#x2F;dev&#x2F;nvme0n1、&#x2F;dev&#x2F;mmcblk0等等，依上文查看的设备名而定</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk /dev/vda #(此处的/dev/vda就是上文看到的设备名，不可照抄)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="left">挂载点</th>
<th align="left">分区</th>
<th align="left">分区类型</th>
<th align="left">建议大小</th>
</tr>
</thead>
<tbody><tr>
<td align="left">[SWAP]</td>
<td align="left">&#x2F;dev&#x2F;vda2(笔者这里是vda2，为swap分区，容量较小)</td>
<td align="left">Linux swap(交换空间)</td>
<td align="left">大于512MB</td>
</tr>
<tr>
<td align="left">&#x2F;mnt</td>
<td align="left">&#x2F;dev&#x2F;vda1(笔者这里是vda1，为根目录，容量量较大)</td>
<td align="left">Linux</td>
<td align="left">剩余的空间</td>
</tr>
</tbody></table>
<h3 id="开始分区"><a href="#开始分区" class="headerlink" title="开始分区"></a><del>开始分区</del></h3><blockquote>
<p>执行上文的</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk /dev/vda#vda不过多赘述</span><br></pre></td></tr></table></figure>
<p>输入”o”<br>当看见：”Created a new DOS (MBR) disklabel with disk”时，说明已经创建了分区表</p>
<h4 id="为swap分区，空间最好在10GB以内"><a href="#为swap分区，空间最好在10GB以内" class="headerlink" title="为swap分区，空间最好在10GB以内"></a>为swap分区，空间最好在10GB以内</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Command (m for help): n</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p): </span><br><span class="line"></span><br><span class="line">Using default response p.</span><br><span class="line">Partition number (1-4, default 1): #回车</span><br><span class="line">First sector (2048-62914559, default 2048):#回车 </span><br><span class="line">Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (2048-62914559, default 62914559): +*G#此处的*为要添加的空间</span><br></pre></td></tr></table></figure>
<p>输入”t”，设置分区类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Command (m for help): t</span><br><span class="line">Partition number (1,2, default 2): </span><br><span class="line">Hex code or alias (type L to list all): 82</span><br></pre></td></tr></table></figure>
<h4 id="为-mnt分区，直接使用剩余空间"><a href="#为-mnt分区，直接使用剩余空间" class="headerlink" title="为&#x2F;mnt分区，直接使用剩余空间"></a>为&#x2F;mnt分区，直接使用剩余空间</h4><p>继续执行n</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Command (m for help): n</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p): </span><br><span class="line"></span><br><span class="line">Using default response p.</span><br><span class="line">Partition number (1-4, default 1): #此处回车</span><br><span class="line">First sector (2048-62914559, default 2048):#此处回车 </span><br><span class="line">Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (2048-62914559, default 62914559): #此处回车</span><br></pre></td></tr></table></figure>
<p>输入”w”以保存并退出</p>
<h2 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h2><p>这里使用btrfs文件系统<br>先查看硬盘分区</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsblk -l</span><br></pre></td></tr></table></figure>
<p>然后将空间大的分区作为&#x2F;mnt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkfs.btrfs -L ARCH /dev/vda1#此处的/dev/vda1应改为你想作为系统的分区</span><br></pre></td></tr></table></figure>

<p>将交换分区初始化：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkswap -L SWAP /dev/vda2#此处的/dev/vda2应改为你想作为swap的分区</span><br></pre></td></tr></table></figure>

<h2 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h2><p>将根磁盘卷挂载到&#x2F;mnt：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount /dev/vda1 /mnt #此处的/dev/vda1应改为你想作为系统的分区</span><br><span class="line">mkdir /mnt/home</span><br><span class="line">mount /dev/vda1 /mnt/home</span><br><span class="line">mkdir /mnt/root</span><br><span class="line">mount /dev/vda1 /mnt/root</span><br></pre></td></tr></table></figure>
<p>启用swap分区</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">swapon /dev/vda2#此处的/dev/vda2应改为你想作为swap的分区</span><br></pre></td></tr></table></figure>

<h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><h3 id="选择镜像站"><a href="#选择镜像站" class="headerlink" title="选择镜像站"></a>选择镜像站</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure>
<h4 id="vim-基础命令"><a href="#vim-基础命令" class="headerlink" title="vim 基础命令"></a>vim 基础命令</h4><p><code>/*</code>搜索<br><code>a</code>输入状态<br><code>esc键</code>退出模式<br>保存并退出vim：<br><code>先按Esc键，再按:wq</code><br>退出vim而不写入文件：<br><code>先按Esc键，再按:q!</code></p>
<h3 id="在-etc-pacman-d-mirrorlist文件的第5行添加："><a href="#在-etc-pacman-d-mirrorlist文件的第5行添加：" class="headerlink" title="在&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件的第5行添加："></a>在&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件的第5行添加：</h3><p><code>Server = httsp://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</code></p>
<h3 id="安装必需软件包"><a href="#安装必需软件包" class="headerlink" title="安装必需软件包"></a>安装必需软件包</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pacstrap -K /mnt base linux linux-headers linux-firmware base-devel btrfs-progs networkmanager bash-completion vim#此处的vim可以是其他的编辑器</span><br></pre></td></tr></table></figure>

<h2 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h2><p>用以下命令生成 <a href="https://wiki.archlinuxcn.org/wiki/Fstab">fstab</a> 文件 (用 -U 或 -L 选项设置 UUID 或卷标)： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure>
<blockquote>
<p>强烈建议在执行完以上命令后，检查一下生成的 &#x2F;mnt&#x2F;etc&#x2F;fstab 文件是否正确。 </p>
</blockquote>
<h3 id="Chroot"><a href="#Chroot" class="headerlink" title="Chroot"></a>Chroot</h3><p>通过 <a href="https://wiki.archlinuxcn.org/wiki/Change_root">chroot</a> 到新安装的系统</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure>
<p><mark>提示：此处使用的是arch-chroot而不是直接使用chroot，注意不要输错。</mark></p>
<h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><p>此处以中国为例，<del>别找北京了，就只有一个上海</del></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>
<p>然后运行 <a href="https://man.archlinux.org/man/hwclock.8">hwclock</a> 以生成&#x2F;etc&#x2F;adjtime：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure>

<h2 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h2><blockquote>
<p>程序和库如果需要本地化文本，都依赖区域设置，后者明确规定了地域、货币、时区日期的格式、字符排列方式和其他本地化标准。</p>
</blockquote>
<p>需在这两个文件设置：locale.gen 与 locale.conf。</p>
<p>编辑 &#x2F;etc&#x2F;locale.gen，然后取消掉 en_US.UTF-8 UTF-8 和其他需要的区域设置前的注释（#）。<br>接着执行 locale-gen 以生成 locale 信息： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">locale-gen#暂不执行</span><br></pre></td></tr></table></figure>

<p>更改&#x2F;etc&#x2F;locale.gen内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/locale.gen</span><br></pre></td></tr></table></figure>
<p>去除en_US.UTF-8和zh_CN.UTF-8前面的#<br>保存并退出<br>然后执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure>
<p>然后创建&#x2F;etc&#x2F;locale.conf，并 <a href="https://wiki.archlinuxcn.org/wiki/Locale#%E7%B3%BB%E7%BB%9F%E5%8C%BA%E5%9F%9F%E8%AE%BE%E7%BD%AE">编辑设定LANG变量</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure>
<p><strong><mark>千万别设置为zh_CN.UTF-8!否则会导致TTY乱码！</mark></strong></p>
<h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p>创建<a href="https://wiki.archlinuxcn.org/wiki/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE#%E8%AE%BE%E7%BD%AE%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%90%8D">hostname</a>文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">myhostname(主机名)</span><br></pre></td></tr></table></figure>
<h2 id="设置Root密码"><a href="#设置Root密码" class="headerlink" title="设置Root密码"></a>设置Root密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure>
<p><strong>注：请记住你所设置的密码！</strong></p>
<h2 id="安装引导程序"><a href="#安装引导程序" class="headerlink" title="安装引导程序"></a>安装引导程序</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pacman -S grub #双系统请多安装一个os-prober;Intel的CPU安装intel-ucode;AMD的CPU安装amd-ucode</span><br></pre></td></tr></table></figure>
<p>如果出现”Import PGP key”字样，请运行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf /etc/pacman.d/gnupg &amp;&amp; pacman-key --init &amp;&amp; pacman-key --populate archlinux</span><br><span class="line">#生成新的密钥环并重新签署密钥</span><br></pre></td></tr></table></figure>
<h3 id="将grub安装引导至系统盘："><a href="#将grub安装引导至系统盘：" class="headerlink" title="将grub安装引导至系统盘："></a>将grub安装引导至系统盘：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsblk #查看设备名</span><br></pre></td></tr></table></figure>
<p>安装引导</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grub-install /dev/vda#这里的vda是设备名，不带数字</span><br></pre></td></tr></table></figure>
<p>编辑&#x2F;etc&#x2F;default&#x2F;grub文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/default/grub</span><br></pre></td></tr></table></figure>
<p>将”GRUB_CMDLINE_LINUX_DEFAULT&#x3D;”loglevel&#x3D;3 quiet””<br>中的loglevel&#x3D;3改为5，删去quiet，添加nowatchdog；<br>修改后执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>
<p>为root再设置一次密码，可以为刚才设置的<br>最后执行<br><code>exit</code>退出arch-chroot<br><code>umout -R /mnt</code>取消挂载&#x2F;mnt<br><code>reboot</code>重启</p>
<h1 id="最后，不出意外的话系统已经安装好了，重启后拔出介质，然后进入grub引导界面"><a href="#最后，不出意外的话系统已经安装好了，重启后拔出介质，然后进入grub引导界面" class="headerlink" title="最后，不出意外的话系统已经安装好了，重启后拔出介质，然后进入grub引导界面"></a>最后，不出意外的话系统已经安装好了，重启后拔出介质，然后进入grub引导界面</h1><h1 id="那么恭喜你，你的Arch-Linux已经成功安装好了！"><a href="#那么恭喜你，你的Arch-Linux已经成功安装好了！" class="headerlink" title="那么恭喜你，你的Arch Linux已经成功安装好了！"></a>那么恭喜你，你的Arch Linux已经成功安装好了！</h1><h1 id="还想再看一遍这个教程吗？只需要执行sudo-rm-rf-，你会回来的"><a href="#还想再看一遍这个教程吗？只需要执行sudo-rm-rf-，你会回来的" class="headerlink" title="还想再看一遍这个教程吗？只需要执行sudo rm -rf /*，你会回来的"></a><del>还想再看一遍这个教程吗？只需要执行<code>sudo rm -rf /*</code>，你会回来的</del></h1>]]></content>
      <categories>
        <category>Arch Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
        <tag>Guides</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux安装教程(以Legacy BIOS为例)</title>
    <url>/How-to-install-Arch(BIOS)Xiaoice/</url>
    <content><![CDATA[<h1 id="Arch-Linux安装教程-（以Legacy-BIOS为例）-最后更新于2023年01月06日"><a href="#Arch-Linux安装教程-（以Legacy-BIOS为例）-最后更新于2023年01月06日" class="headerlink" title="Arch Linux安装教程 （以Legacy BIOS为例） 最后更新于2023年01月06日"></a>Arch Linux安装教程 （以Legacy BIOS为例） 最后更新于2023年01月06日</h1><h2 id="1-Arch-Linux-KDE-的安装及配置——"><a href="#1-Arch-Linux-KDE-的安装及配置——" class="headerlink" title="1.Arch Linux &amp; KDE 的安装及配置——"></a>1.Arch Linux &amp; KDE 的安装及配置——</h2><h4 id="零、系统镜像的下载-安装介质的制作-BIOS-的设置"><a href="#零、系统镜像的下载-安装介质的制作-BIOS-的设置" class="headerlink" title="零、系统镜像的下载 &amp; 安装介质的制作 &amp; BIOS 的设置"></a>零、系统镜像的下载 &amp; 安装介质的制作 &amp; BIOS 的设置</h4><p><a href="https://mirrors.ustc.edu.cn/archlinux/iso/2023.01.01/archlinux-2023.01.01-x86_64.iso">点击此处下载系统镜像</a>并<a href="https://mirrors.ustc.edu.cn/archlinux/iso/2023.01.01/sha256sums.txt">校验SHA256</a>镜像的完整性。校验无误后，使用<a href="https://www.ventoy.net/cn/download.html">Ventoy</a>制作安装介质。（如果是首次使用Ventoy，<a href="https://www.ventoy.net/cn/index.html">请点击此处</a>查看使用方法）然后进入BIOS，将安全启动和快速启动关闭并将安装介质（如U盘）设置为第一启动项，并按F10保存退出。进入ArchLinux安装盘即可。</p>
<h5 id="如果设备中包含NVIDIA显卡，请在进入liveCD的GRUB引导界面时按下键盘上的字母E-进入GRUB的编辑模式。在其linux行的末尾加入nouveau-modeset-0来屏蔽NVIDIA开源驱动。否则会出现加载nouveau模块报错和其他模块无法加载的问题。编辑完成后按CTRL-X退出。"><a href="#如果设备中包含NVIDIA显卡，请在进入liveCD的GRUB引导界面时按下键盘上的字母E-进入GRUB的编辑模式。在其linux行的末尾加入nouveau-modeset-0来屏蔽NVIDIA开源驱动。否则会出现加载nouveau模块报错和其他模块无法加载的问题。编辑完成后按CTRL-X退出。" class="headerlink" title="如果设备中包含NVIDIA显卡，请在进入liveCD的GRUB引导界面时按下键盘上的字母E,进入GRUB的编辑模式。在其linux行的末尾加入nouveau.modeset&#x3D;0来屏蔽NVIDIA开源驱动。否则会出现加载nouveau模块报错和其他模块无法加载的问题。编辑完成后按CTRL+X退出。"></a>如果设备中包含NVIDIA显卡，请在进入liveCD的GRUB引导界面时按下键盘上的字母E,进入GRUB的编辑模式。在其linux行的末尾加入nouveau.modeset&#x3D;0来屏蔽NVIDIA开源驱动。否则会出现加载nouveau模块报错和其他模块无法加载的问题。编辑完成后按CTRL+X退出。</h5><blockquote>
<p>如有疑问请参考Wiki以下章节：</p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E8%8E%B7%E5%8F%96%E5%AE%89%E8%A3%85%E6%98%A0%E5%83%8F">获取安装映像</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%87%86%E5%A4%87%E5%AE%89%E8%A3%85%E6%98%A0%E5%83%8F">准备安装映像</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%AF%E5%8A%A8%E5%88%B0_Live_%E7%8E%AF%E5%A2%83">启动到Live环境</a></p>
</blockquote>
<h4 id="一、验证引导模式-联网-换源："><a href="#一、验证引导模式-联网-换源：" class="headerlink" title="一、验证引导模式 &amp; 联网 &amp; 换源："></a>一、验证引导模式 &amp; 联网 &amp; 换源：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> /sys/firmware/efi/efivars</span><br><span class="line"><span class="comment">#验证引导模式（如果目录不存在，即为Legacy BIOS引导模式；反之，请使用隔壁以UEFI为例的教程）</span></span><br><span class="line"></span><br><span class="line">$ iwctl</span><br><span class="line"><span class="comment">#运行iwctl（如果是台式机，可直接跳到ping -c 5 archlinux.org这一步）</span></span><br><span class="line">[iwctl]<span class="comment"># device list</span></span><br><span class="line"><span class="comment">#列出WiFi设备（一般为wlan0；这里以wlan0为例）</span></span><br><span class="line">[iwctl]<span class="comment"># station wlan0 scan</span></span><br><span class="line"><span class="comment">#扫描网络</span></span><br><span class="line">[iwctl]<span class="comment"># station wlan0 get-networks</span></span><br><span class="line"><span class="comment">#列出可用网络</span></span><br><span class="line">[iwctl]<span class="comment"># station wlan0 connect X</span></span><br><span class="line"><span class="comment">#连接到X（X改成你可用的WiFi名称并在回车后输入密码且确保密码输入正确）</span></span><br><span class="line">[iwctl]<span class="comment"># exit</span></span><br><span class="line"><span class="comment">#退出iwctl</span></span><br><span class="line"></span><br><span class="line">$ ping -c 5 archlinux.org</span><br><span class="line"><span class="comment">#检查网络连接（如果有输出内容，即为联网成功）</span></span><br><span class="line"></span><br><span class="line">$ reflector --country China --save /etc/pacman.d/mirrorlist</span><br><span class="line"><span class="comment">#换源（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ systemctl stop reflector</span><br><span class="line"><span class="comment">#关闭reflector服务</span></span><br><span class="line"></span><br><span class="line">$ vim /etc/pacman.d/mirrorlist</span><br><span class="line"><span class="comment">#编辑/etc/pacman.d/mirrorlist文件，保留自己需要的源（一般推荐使用中科大源或清华源）</span></span><br><span class="line"></span><br><span class="line">$ timedatectl status</span><br><span class="line"><span class="comment">#检查服务状态</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>如有疑问请参考Wiki以下章节：</p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E9%AA%8C%E8%AF%81%E5%BC%95%E5%AF%BC%E6%A8%A1%E5%BC%8F">验证引导模式</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E8%BF%9E%E6%8E%A5%E5%88%B0%E5%9B%A0%E7%89%B9%E7%BD%91">连接到因特网</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E9%80%89%E6%8B%A9%E9%95%9C%E5%83%8F">选择镜像</a>和<a href="https://wiki.archlinux.org/title/Reflector_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E7%A4%BA%E4%BE%8B">reflector</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4">更新系统时间</a></p>
</blockquote>
<h4 id="二、分区-挂载："><a href="#二、分区-挂载：" class="headerlink" title="二、分区 &amp; 挂载："></a>二、分区 &amp; 挂载：</h4><p>以下分区和挂载相关步骤是以SATA协议硬盘为例。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ lsblk</span><br><span class="line"><span class="comment">#查看硬盘名称（一般为sda；这里以sda为例）</span></span><br><span class="line"></span><br><span class="line">$ fdisk /dev/sda</span><br><span class="line"><span class="comment">#使用fdisk对sda进行相关操作</span></span><br><span class="line"><span class="comment">#步骤如下：</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): o <span class="comment">#输入o新建MBR分区表</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n <span class="comment">#输入n创建新分区</span></span><br><span class="line">Select (default p): p <span class="comment">#这里按Enter键创建主分区（如果想创建逻辑扩展分区请输入e）</span></span><br><span class="line">Partition number (1-4, default 1): <span class="comment">#这里按Enter键</span></span><br><span class="line">First sector (2048-X, default 2048): <span class="comment">#这里按Enter键</span></span><br><span class="line">Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (2048-X, default X): +10G <span class="comment">#输入+10G</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): t <span class="comment">#输入t更改分区类型</span></span><br><span class="line">Hex code or <span class="built_in">alias</span> (<span class="built_in">type</span> L to list all): 82 <span class="comment">#输入82，创建swap分区</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n <span class="comment">#输入n创建新分区，然后一直按Enter键，把剩下的空间全部分配给/分区</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w <span class="comment">#输入w写入 </span></span><br><span class="line"></span><br><span class="line">$ lsblk</span><br><span class="line"><span class="comment">#查看分区结构是否正确</span></span><br><span class="line"></span><br><span class="line">$ mkfs.btrfs -L ARCH /dev/sda2</span><br><span class="line"><span class="comment">#将sda2格式化为btrfs，创建标签为ARCH（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ mkswap -L SWAP /dev/sda1</span><br><span class="line"><span class="comment">#将sda1设置为swap，创建标签为SWAP（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ mount -t btrfs -o compress=zstd /dev/sda2 /mnt</span><br><span class="line"><span class="comment">#将sda2挂载到/mnt目录并创建btrfs子卷</span></span><br><span class="line"><span class="comment">#步骤如下：</span></span><br><span class="line">btrfs subvolume create /mnt/@ <span class="comment">#创建/目录的btrfs子卷</span></span><br><span class="line">btrfs subvolume create /mnt/@root <span class="comment">#创建/root目录的btrfs子卷</span></span><br><span class="line">btrfs subvolume create /mnt/@home <span class="comment">#创建/home目录的btrfs子卷</span></span><br><span class="line">umount /mnt <span class="comment">#卸载/mnt目录</span></span><br><span class="line">mount -t btrfs -o subvol=/@,compress=zstd /dev/sda2 /mnt <span class="comment">#挂载/目录的btrfs子卷到/mnt目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/root <span class="comment">#创建/mnt/root目录</span></span><br><span class="line">mount -t btrfs -o subvol=/@root,compress=zstd /dev/sda2 /mnt/root <span class="comment">#挂载/root目录的btrfs子卷到/mnt/root目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/home <span class="comment">#创建/mnt/home目录</span></span><br><span class="line">mount -t btrfs -o subvol=/@home,compress=zstd /dev/sda2 /mnt/home <span class="comment">#挂载/home目录的btrfs子卷到/mnt/home目录</span></span><br><span class="line"></span><br><span class="line">$ swapon /dev/sda1</span><br><span class="line"><span class="comment">#激活sda1为交换分区</span></span><br><span class="line"></span><br><span class="line">$ lsblk -f</span><br><span class="line"><span class="comment">#查看相应分区的文件系统及挂载是否正确</span></span><br></pre></td></tr></table></figure>

<p>在pacstrap之前，请再检查一下&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件。例如：cat &#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist或vim &#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist。总之，检查一下这个文件即可。</p>
<blockquote>
<p>如有疑问请参考Wiki以下章节：</p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%BB%BA%E7%AB%8B%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA">建立硬盘分区</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%88%86%E5%8C%BA">格式化分区</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%8C%82%E8%BD%BD%E5%88%86%E5%8C%BA">挂载分区</a></p>
</blockquote>
<h4 id="三、安装基本的包-初步配置："><a href="#三、安装基本的包-初步配置：" class="headerlink" title="三、安装基本的包 &amp; 初步配置："></a>三、安装基本的包 &amp; 初步配置：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacstrap -K /mnt linux linux-firmware sof-firmware linux-headers base base-devel vim bash-completion networkmanager dosfstools btrfs-progs exfatprogs ntfs-3g pacman-contrib</span><br><span class="line"><span class="comment">#安装必要的软件包（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ genfstab -U /mnt &gt; /mnt/etc/fstab</span><br><span class="line"><span class="comment">#生成/mnt/etc/fstab文件（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cat</span> /mnt/etc/fstab</span><br><span class="line"><span class="comment">#查看/mnt/etc/fstab文件是否正确（如果不正确，请重新分区、挂载、pacstrap）</span></span><br><span class="line"></span><br><span class="line">$ arch-chroot /mnt</span><br><span class="line"><span class="comment">#进入目标系统</span></span><br><span class="line"></span><br><span class="line">$ pacman -S grub amd-ucode intel-ucode</span><br><span class="line"><span class="comment">#安装grub &amp; amd-ucode或intel-ucode（AMD的CPU安装amd-ucode，intel的CPU安装intel-ucode）</span></span><br><span class="line"></span><br><span class="line">$ lsblk</span><br><span class="line"><span class="comment">#查看硬盘名称</span></span><br><span class="line"></span><br><span class="line">$ grub-install /dev/sda</span><br><span class="line"><span class="comment">#将grub写入sda</span></span><br><span class="line"></span><br><span class="line">$ vim /etc/default/grub</span><br><span class="line"><span class="comment">#编辑/etc/default/grub文件，将GRUB_CMDLINE_LINUX=&quot;&quot;修改为GRUB_CMDLINE_LINUX=&quot; nouveau.modeset=0&quot;（没有nvidia显卡可跳过）</span></span><br><span class="line"></span><br><span class="line">$ grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"><span class="comment">#生成/boot/grub/grub.cfg文件</span></span><br><span class="line"></span><br><span class="line">$ systemctl <span class="built_in">enable</span> NetworkManager</span><br><span class="line"><span class="comment">#开机自启NetworkManager服务（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ passwd root</span><br><span class="line"><span class="comment">#设置root密码（在回车后输入密码且密码不显示，输入完成后回车，再输入一遍且密码同样不显示，输入完成后再回车，即可完成密码设置）</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>如有疑问请参考Wiki以下章节：</p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%AE%89%E8%A3%85%E5%BF%85%E9%9C%80%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85">安装必需的软件包</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#Fstab">Fstab</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#Chroot">Chroot</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%AE%89%E8%A3%85%E5%BC%95%E5%AF%BC%E7%A8%8B%E5%BA%8F">安装引导程序</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#Root_%E5%AF%86%E7%A0%81">Root密码</a></p>
</blockquote>
<h4 id="四、退出目标系统："><a href="#四、退出目标系统：" class="headerlink" title="四、退出目标系统："></a>四、退出目标系统：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">exit</span></span><br><span class="line"><span class="comment">#退出目标系统</span></span><br><span class="line"></span><br><span class="line">$ umount -R /mnt</span><br><span class="line"><span class="comment">#卸载/mnt目录</span></span><br><span class="line"></span><br><span class="line">$ reboot</span><br><span class="line"><span class="comment">#重启并登陆root</span></span><br></pre></td></tr></table></figure>

<h4 id="五、系统配置："><a href="#五、系统配置：" class="headerlink" title="五、系统配置："></a>五、系统配置：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nmtui</span><br><span class="line"><span class="comment">#运行nmtui（根据图形界面提示进行联网操作即可；台式机可跳过）</span></span><br><span class="line"></span><br><span class="line">$ ping -c 5 archlinux.org</span><br><span class="line"><span class="comment">#检查网络连接（如果有输出内容，即为联网成功）</span></span><br><span class="line"></span><br><span class="line">$ vim /etc/hostname</span><br><span class="line"><span class="comment">#创建/etc/hostname文件，加入以下内容：</span></span><br><span class="line"><span class="built_in">arch</span></span><br><span class="line"><span class="comment">#将主机名设置为arch</span></span><br><span class="line"></span><br><span class="line">$ vim /etc/hosts</span><br><span class="line"><span class="comment">#编辑/etc/hosts文件，在末尾加入以下内容：</span></span><br><span class="line">127.0.0.1 localhost</span><br><span class="line">::1 localhost</span><br><span class="line">127.0.1.1 arch.localdomain <span class="built_in">arch</span></span><br><span class="line"><span class="comment">#配置hosts文件，映射IP地址和主机名</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; hwclock --systohc</span><br><span class="line"><span class="comment">#设置时区为上海（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ vim /etc/environment</span><br><span class="line"><span class="comment">#编辑/etc/environment文件，在开头加入以下内容：</span></span><br><span class="line"><span class="built_in">export</span> EDITOR=/bin/vim</span><br><span class="line"><span class="comment">#设置vim为默认文本编辑器（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ reboot</span><br><span class="line"><span class="comment">#重启并登陆root</span></span><br><span class="line"></span><br><span class="line">$ useradd -m -G wheel <span class="built_in">arch</span></span><br><span class="line"><span class="comment">#添加普通用户，用户名为arch并将arch添加到wheel组中</span></span><br><span class="line"></span><br><span class="line">$ passwd <span class="built_in">arch</span></span><br><span class="line"><span class="comment">#设置arch密码（注意事项请参考第三阶段的设置root密码部分）</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">id</span> <span class="built_in">arch</span></span><br><span class="line"><span class="comment">#查看用户组是否添加到相应的组中</span></span><br><span class="line"></span><br><span class="line">$ visudo</span><br><span class="line"><span class="comment">#设置用户权限，删除%wheel ALL=(ALL:ALL) ALL前面的#</span></span><br><span class="line"></span><br><span class="line">$ reboot</span><br><span class="line"><span class="comment">#重启并登陆root</span></span><br><span class="line"></span><br><span class="line">$ vim /etc/locale.gen</span><br><span class="line"><span class="comment">#编辑/etc/locale.gen文件，删除en_US.UTF-8 UTF-8和zh_CN.UTF-8 UTF-8前面的#</span></span><br><span class="line"></span><br><span class="line">$ locale-gen</span><br><span class="line"><span class="comment">#生成语言</span></span><br><span class="line"></span><br><span class="line">$ vim /etc/locale.conf</span><br><span class="line"><span class="comment">#创建/etc/locale.conf文件，加入以下内容（如果文件已经存在，则删除文件中原有的内容）：</span></span><br><span class="line">LANG=<span class="string">&quot;en_US.UTF-8&quot;</span></span><br><span class="line"><span class="comment">#设置语言为en_US.UTF-8，不要不要不要设置为zh_CN.UTF-8（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ vim /etc/pacman.conf</span><br><span class="line"><span class="comment">#编辑/etc/pacman.conf文件，删除[multilib]区域的所有#（开启32位支持）并在末尾加入以下内容：</span></span><br><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br><span class="line"><span class="comment">#添加archlinuxcn源（一般推荐使用中科大源；注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ pacman -Sy</span><br><span class="line"><span class="comment">#同步数据</span></span><br><span class="line"></span><br><span class="line">$ pacman -S archlinuxcn-keyring</span><br><span class="line"><span class="comment">#安装archlinuxcn-keyring</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">rm</span> -rf /etc/pacman.d/gnupg &amp;&amp; pacman-key --init &amp;&amp; pacman-key --populate archlinux &amp;&amp; pacman-key --populate archlinuxcn</span><br><span class="line"><span class="comment">#生成新的密钥环并重新签署密钥（安装archlinuxcn-keyring不报错时可跳过）</span></span><br><span class="line"></span><br><span class="line">$ pacman -Sy</span><br><span class="line"><span class="comment">#再次同步数据</span></span><br><span class="line"></span><br><span class="line">$ pacman -S mesa lib32-mesa xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon xf86-video-ati opencl-mesa lib32-opencl-mesa opencl-headers</span><br><span class="line"><span class="comment">#安装AMD核显相关驱动</span></span><br><span class="line"></span><br><span class="line">$ pacman -S mesa lib32-mesa xf86-video-intel vulkan-intel lib32-vulkan-intel opencl-mesa lib32-opencl-mesa opencl-headers</span><br><span class="line"><span class="comment">#安装intel核显相关驱动</span></span><br><span class="line"></span><br><span class="line">$ pacman -S pipewire lib32-pipewire pipewire-media-session pipewire-alsa pipewire-pulse pipewire-jack lib32-pipewire-jack</span><br><span class="line"><span class="comment">#安装声音相关驱动</span></span><br><span class="line"></span><br><span class="line">$ systemctl <span class="built_in">enable</span> bluetooth</span><br><span class="line"><span class="comment">#开机自启bluetooth服务</span></span><br><span class="line"></span><br><span class="line">$ reboot</span><br><span class="line"><span class="comment">#重启并登陆root</span></span><br></pre></td></tr></table></figure>

<p><del>So,Nvidia:FuckYou!</del></p>
<blockquote>
<p>如有疑问请参考Wiki以下内容：</p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE">网络配置</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%97%B6%E5%8C%BA">时区</a></p>
<p><a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%9C%AC%E5%9C%B0%E5%8C%96">本地化</a></p>
</blockquote>
<h4 id="六、安装桌面环境："><a href="#六、安装桌面环境：" class="headerlink" title="六、安装桌面环境："></a>六、安装桌面环境：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S ttf-dejavu ttf-liberation noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-emoji-blob noto-fonts-extra wqy-bitmapfont wqy-microhei wqy-microhei-lite wqy-zenhei ttf-arphic-extra ttf-arphic-ukai ttf-arphic-uming adobe-source-code-pro-fonts adobe-source-han-sans-jp-fonts adobe-source-han-sans-tw-fonts adobe-source-han-serif-jp-fonts adobe-source-han-serif-tw-fonts adobe-source-han-sans-cn-fonts adobe-source-han-sans-kr-fonts adobe-source-han-serif-cn-fonts adobe-source-han-serif-kr-fonts adobe-source-sans-fonts adobe-source-han-sans-hk-fonts adobe-source-han-sans-otc-fonts adobe-source-han-serif-hk-fonts adobe-source-han-serif-otc-fonts adobe-source-serif-fonts</span><br><span class="line"><span class="comment">#安装字体（请根据需要自行补充，这里只安装常用的包）</span></span><br><span class="line"></span><br><span class="line">$ pacman -S plasma-meta konsole dolphin</span><br><span class="line"><span class="comment">#安装KDE桌面及软件（这里只安装最必要的包，如果想完整使用KDE的各种功能请根据对应提示安装需要的包）</span></span><br><span class="line"></span><br><span class="line">$ systemctl <span class="built_in">enable</span> sddm</span><br><span class="line"><span class="comment">#开机自启sddm服务</span></span><br><span class="line"></span><br><span class="line">$ reboot</span><br><span class="line"><span class="comment">#重启</span></span><br></pre></td></tr></table></figure>

<h2 id="2-桌面中文环境的设置-输入法的安装及配置——"><a href="#2-桌面中文环境的设置-输入法的安装及配置——" class="headerlink" title="2.桌面中文环境的设置 &amp; 输入法的安装及配置——"></a>2.桌面中文环境的设置 &amp; 输入法的安装及配置——</h2><h4 id="一、中文环境的设置："><a href="#一、中文环境的设置：" class="headerlink" title="一、中文环境的设置："></a>一、中文环境的设置：</h4><p>System Settings&gt;&gt;Regional Settings&gt;&gt;Language&gt;&gt;Change Language，<strong>简体中文</strong>&gt;&gt;Apply。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ reboot</span><br><span class="line"><span class="comment">#重启</span></span><br></pre></td></tr></table></figure>

<p>如果以上方法出现中英文混杂的情况可尝试以下方法（推荐）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim .xprofile</span><br><span class="line"><span class="comment">#创建~/.xprofile文件，加入以下内容：</span></span><br><span class="line"><span class="built_in">export</span> LANG=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LANGUAGE=zh_CN:en_US</span><br><span class="line"><span class="comment">#设置X环境为中文（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ reboot</span><br><span class="line"><span class="comment">#重启</span></span><br></pre></td></tr></table></figure>

<h4 id="二、Fcitx-5-输入法的安装："><a href="#二、Fcitx-5-输入法的安装：" class="headerlink" title="二、Fcitx 5 输入法的安装："></a>二、Fcitx 5 输入法的安装：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -S fcitx5-im fcitx5-chinese-addons</span><br><span class="line"><span class="comment">#安装fcitx5主体、配置工具、输入法引擎及中文输入法模块</span></span><br><span class="line"></span><br><span class="line">$ sudo vim /etc/environment</span><br><span class="line"><span class="comment">#编辑/etc/environment文件，在末尾加入以下内容：</span></span><br><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line"><span class="comment">#配置环境变量（注意大小写）</span></span><br><span class="line"></span><br><span class="line">$ sudo pacman -S fcitx5-pinyin-zhwiki fcitx5-pinyin-moegirl</span><br><span class="line"><span class="comment">#安装词库</span></span><br><span class="line"></span><br><span class="line">$ reboot</span><br><span class="line"><span class="comment">#重启</span></span><br></pre></td></tr></table></figure>

<h1 id="END（想再看一遍本教程吗？那就请在终端中输入sudo-rm-rf-，你会回来的。）"><a href="#END（想再看一遍本教程吗？那就请在终端中输入sudo-rm-rf-，你会回来的。）" class="headerlink" title="END（想再看一遍本教程吗？那就请在终端中输入sudo rm -rf &#x2F;*，你会回来的。）"></a>END<del>（想再看一遍本教程吗？那就请在终端中输入sudo rm -rf &#x2F;*，你会回来的。）</del></h1><h1 id="By-MicrosoftXiaoice"><a href="#By-MicrosoftXiaoice" class="headerlink" title="By MicrosoftXiaoice"></a>By MicrosoftXiaoice</h1>]]></content>
      <categories>
        <category>Arch Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
        <tag>Guides</tag>
      </tags>
  </entry>
  <entry>
    <title>Hyprland指南(安装其他软件)</title>
    <url>/Hyprland-guide-install-other-programs/</url>
    <content><![CDATA[<h1 id="Hyprland指南-第二篇"><a href="#Hyprland指南-第二篇" class="headerlink" title="Hyprland指南(第二篇)"></a>Hyprland指南(第二篇)</h1><h2 id="若想使用通知，需要安装-dunst"><a href="#若想使用通知，需要安装-dunst" class="headerlink" title="若想使用通知，需要安装 dunst"></a>若想使用通知，需要安装 dunst</h2><p>如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S dunst</span><br></pre></td></tr></table></figure>
<p>然后将本仓库的&#x2F;dunst 复制到~&#x2F;.config&#x2F;dunst 中，若没有该文件夹，则创建一个 dunst 的文件夹，否则 dunst 不会读取并且使用的。<br><del>都用 Arch Linux 了，不会连创建文件夹都不会吧？</del><br><del>为了避免有人不会创建文件夹</del></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir ~/.config/dunst</span><br></pre></td></tr></table></figure>
<p>然后设置自启动：<br>在~&#x2F;.config&#x2F;hypr&#x2F;hyprland.conf中添加：<br><code>exec-once = dunst</code></p>
<h2 id="若想实现类似于-i3-status-的功能（状态栏），需要安装-waybar"><a href="#若想实现类似于-i3-status-的功能（状态栏），需要安装-waybar" class="headerlink" title="若想实现类似于 i3-status 的功能（状态栏），需要安装 waybar"></a>若想实现类似于 i3-status 的功能（状态栏），需要安装 waybar</h2><p>如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paru -S waybar-git</span><br></pre></td></tr></table></figure>
<p>然后将本仓库中的&#x2F;waybar 文件夹复制到<del>&#x2F;.config&#x2F;hypr 中<del>可以新建文件夹，也可以不用</del>然后记住 waybar 文件夹中的 config.jsonc 和 style.css 路径（完整路径）<br>设置自启动：<br>在</del>&#x2F;.config&#x2F;hypr&#x2F;hyprland.conf 中写入：<br><code>exec-once = waybar -c $WAYBAR/config.jsonc -s $WAYBAR/style.css</code><br><strong>其中的$WAYBAR 为你的 waybar 具体路径</strong></p>
<h2 id="若想输入中文，你需要安装输入法"><a href="#若想输入中文，你需要安装输入法" class="headerlink" title="若想输入中文，你需要安装输入法"></a><del>若想输入中文</del>，你需要安装输入法</h2><h3 id="若想使用fcitx5的中文输入法-非rime"><a href="#若想使用fcitx5的中文输入法-非rime" class="headerlink" title="若想使用fcitx5的中文输入法(非rime)"></a>若想使用fcitx5的中文输入法(非rime)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx5-im fcitx5-chinese fcitx5-pinyin-moegirl fcitx5-material-color # 安装输入法相关软件包，词库，主题 </span><br></pre></td></tr></table></figure>
<h3 id="此处以安装rime输入法为例，其他输入法同理，不过推荐使用fcitx5"><a href="#此处以安装rime输入法为例，其他输入法同理，不过推荐使用fcitx5" class="headerlink" title="此处以安装rime输入法为例，其他输入法同理，不过推荐使用fcitx5"></a><em>此处以安装rime输入法为例，其他输入法同理，不过推荐使用fcitx5</em></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx5-rime</span><br></pre></td></tr></table></figure>
<p><del>我使用的就是rime输入法，不过我感觉输入体验是不如搜狗输入法，将就着用吧</del></p>
<h4 id="此外，我们还需要设置环境变量，此处使用neovim来编辑-vim-nano等等编辑器均可，无需跟风"><a href="#此外，我们还需要设置环境变量，此处使用neovim来编辑-vim-nano等等编辑器均可，无需跟风" class="headerlink" title="此外，我们还需要设置环境变量，此处使用neovim来编辑(vim,nano等等编辑器均可，无需跟风)"></a>此外，我们还需要设置环境变量，此处使用neovim来编辑(<del>vim,nano等等编辑器均可，无需跟风</del>)</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nvim /etc/environment</span><br></pre></td></tr></table></figure>
<p>加入以下内容：<br><code>GTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS=@im=fcitx SDL_IM_MODULE=fcitx GLFW_IM_MODULE=ibus</code></p>
<h1 id="本篇教程结束"><a href="#本篇教程结束" class="headerlink" title="本篇教程结束"></a>本篇教程结束</h1><h1 id="All-done-Enjoy-it"><a href="#All-done-Enjoy-it" class="headerlink" title="All done! Enjoy it!"></a>All done! Enjoy it!</h1><h2 id="Writer-PILIHU2022"><a href="#Writer-PILIHU2022" class="headerlink" title="Writer:PILIHU2022"></a>Writer:PILIHU2022</h2>]]></content>
      <categories>
        <category>Guide</category>
      </categories>
      <tags>
        <tag>Hyprland</tag>
        <tag>Guides</tag>
      </tags>
  </entry>
  <entry>
    <title>Hyprland指南(安装常用软件)</title>
    <url>/Hyprland-guide-install-useful-programs/</url>
    <content><![CDATA[<h1 id="Hyprland指南-安装常用软件"><a href="#Hyprland指南-安装常用软件" class="headerlink" title="Hyprland指南(安装常用软件)"></a>Hyprland指南(安装常用软件)</h1><h2 id="安装VScode"><a href="#安装VScode" class="headerlink" title="安装VScode"></a>安装VScode</h2><p>全称为Visual Studio Code<sup>AUR</sup>，由于名字太长所以被人们简化成VSC(吧？)<del>不用管这些，我们只是用这个来码代码(屎山)</del></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paru -S visual-studio-code-bin</span><br></pre></td></tr></table></figure>
<p>然后就跟着VSC的提示来安装中文语言包，装好就不用我说了吧？<br>如果嫌调字体麻烦的话可以来到<a href="https://github.com/PILIHU2022/My-Arch-configs">我的配置仓库</a>，在里面的settings(VSC).json中，有一个<code>//设置字体</code>，把里面的内容复制到你的VSC配置文件中，路径如下:<br><code>~/.config/code/User/</code><br>字体的话需要安装如下:(自己配置的话可跳过)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paru -S ttf-cascadia-code nerd-fonts-completle </span><br></pre></td></tr></table></figure>
<p>鸿蒙黑体也是可以的，但是在系统上使用似乎会出现有的字体大，有的字体小的问题，我没有进一步研究。<br><del>只记得要装这两个，还有些忘了</del><br>微软雅黑的话可以换成别的字体</p>
<h3 id="剩下的就自己折腾吧"><a href="#剩下的就自己折腾吧" class="headerlink" title="剩下的就自己折腾吧"></a>剩下的就自己折腾吧</h3><h2 id="安装QQ"><a href="#安装QQ" class="headerlink" title="安装QQ"></a>安装QQ</h2><p>这个可没有配置文件照抄了，直接执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paru -S linuxqq</span><br></pre></td></tr></table></figure>
<p>安装即可，若出现闪退情况，请参阅<br><a href="https://aur.archlinux.org/packages/linuxqq">AUR-LinuxQQ评论区</a></p>
<h2 id="Markdown编辑软件"><a href="#Markdown编辑软件" class="headerlink" title="Markdown编辑软件"></a>Markdown编辑软件</h2><ul>
<li>Typora<ul>
<li>UI可以，可以实时预览，支持快捷键，但是不支持修改快捷键，Markdown的功能基本都有，就是要￥</li>
</ul>
</li>
<li>VNote<ul>
<li>开源，不可以实时预览，支持快捷键，支持修改快捷键，有能力的甚至可以自定义主题以及样式，有待改进</li>
</ul>
</li>
<li>Marktext<ul>
<li>在Windows上用过，不过是20年的事，不知道现在咋样了，听说可以实时预览了，有兴趣的可以试试</li>
</ul>
</li>
</ul>
<h4 id="下面以安装VNote为例："><a href="#下面以安装VNote为例：" class="headerlink" title="下面以安装VNote为例："></a>下面以安装VNote为例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paru -S vnote-appimage</span><br></pre></td></tr></table></figure>
<p>在AUR中有一个包名叫做<code>vnote</code>的,我试过,无法使用中文输入,所以使用<code>vnote-appimage</code></p>
<h4 id="安装Typora"><a href="#安装Typora" class="headerlink" title="安装Typora"></a>安装Typora</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S Typora</span><br></pre></td></tr></table></figure>
<p><del>当然,这是有米的人的操作</del></p>
<h5 id="想使用破解版的可以添加zzy-ac源-有米的人可以跳过"><a href="#想使用破解版的可以添加zzy-ac源-有米的人可以跳过" class="headerlink" title="想使用破解版的可以添加zzy-ac源(有米的人可以跳过)"></a>想使用破解版的可以添加zzy-ac源(<del>有米的人可以跳过</del>)</h5><p>在&#x2F;etc&#x2F;pacman.conf中添加:<br>&#96;<br>[zzy-ac]<br>SigLevel&#x3D;Never</p>
<p>Server &#x3D; <a href="https://github.com/zzy-ac/repo/releases/download/x86_64/">https://github.com/zzy-ac/repo/releases/download/x86_64/</a></p>
<p>Server &#x3D; <a href="https://gh.dmnb.cf/https://github.com/zzy-ac/repo/releases/download/x86_64">https://gh.dmnb.cf/https://github.com/zzy-ac/repo/releases/download/x86_64</a><br>&#96;<br>安装Typora</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S zzy-ac/typora-electron-crack</span><br></pre></td></tr></table></figure>

<h1 id="All-done-Enjoy-it"><a href="#All-done-Enjoy-it" class="headerlink" title="All done! Enjoy it!"></a>All done! Enjoy it!</h1><h1 id="Writer-PILIHU"><a href="#Writer-PILIHU" class="headerlink" title="Writer:PILIHU"></a>Writer:PILIHU</h1>]]></content>
      <categories>
        <category>Guide</category>
      </categories>
      <tags>
        <tag>Hyprland</tag>
        <tag>Guides</tag>
      </tags>
  </entry>
  <entry>
    <title>在Arch Linux上安装AMD显卡驱动</title>
    <url>/Install-AMD-Graphics-on-Arch/</url>
    <content><![CDATA[<h1 id="设备"><a href="#设备" class="headerlink" title="设备:"></a>设备:</h1><ul>
<li>显卡：AMD Radeon RX 6500 XT</li>
</ul>
<h1 id="参照Wiki"><a href="#参照Wiki" class="headerlink" title="参照Wiki"></a>参照Wiki</h1><p>如果动手能力及理解能力比较好的话可以参考ArchWiki：<br><a href="https://wiki.archlinuxcn.org/wiki/AMDGPU">AMDGPU</a><br><a href="https://wiki.archlinuxcn.org/wiki/ATI">ATI</a><br><a href="https://arch.icekylin.online/guide/rookie/graphic-driver.html#%E7%8B%AC%E7%AB%8B%E6%98%BE%E5%8D%A1">Arch简明指南-Arch显卡驱动</a>（不推荐！可能更新不及时，不过你可以参考一下那里的查看显卡架构小结）</p>
<div class="note warning flat"><p>Warning：不要查看野教程！！不要查看野教程！！不要查看野教程！！</p>
</div>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>如果你碰巧与我使用的显卡是一样的，<del>很好，你仍可能需要参照Wiki</del><br><mark>此处以AMD Radeon RX 6500 XT为例，安装AMDGPU驱动，ATI驱动请自行Google和参照Arch Wiki</mark><br>首先需要安装<code>mesa</code>包，使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S mesa lib32-mesa <span class="comment"># lib32-mesa是对于32位程序，需要开启multilib</span></span><br></pre></td></tr></table></figure>
<p>添加DDX驱动支持：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S xf86-video-amdgpu</span><br></pre></td></tr></table></figure>
<p>在Wiki上所提到的其他软件，可以按需求安装，但是安装后的<code>llvm</code>和<code>llvm-libs</code>是没有<code>-git</code>结尾，否则，请重新安装<code>llvm</code>和<code>llvm-libs</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S llvm llvm-libs</span><br></pre></td></tr></table></figure>
<p>如果遇到有包依赖，请卸载掉(因为这些包大概都可能是以<code>-git</code>)结尾的，安装好<code>llvm</code>和<code>llvm-libs</code>后再安装回刚刚卸载的包(应该是没有<code>-git</code>结尾的)</p>
<h1 id="以下是我求助的图片及帖文"><a href="#以下是我求助的图片及帖文" class="headerlink" title="以下是我求助的图片及帖文"></a>以下是我求助的图片及帖文</h1><p><a href="https://bbs.archlinuxcn.org/viewtopic.php?id=14013">帖文</a></p>
<p><a href="https://s1.imagehub.cc/images/2024/01/26/1853fdbb328161e95bce6608f155e39a.jpeg">电报中文群组1-图床</a><br><a href="https://s1.imagehub.cc/images/2024/01/26/15fadfc09ed8a6f85bb2177d12e7e6a0.png">电报中文群组2-图床</a></p>
<p><a href="https://pilihu2023-my.sharepoint.com/:i:/g/personal/pilihu_pilihu2023_onmicrosoft_com/EYyv6xJUqHBJnx04Q13hmCQBVg9XeTU1bNJv3iqt06YBOw?e=kYMRs3">电报中文群组1-OneDrive</a><br><a href="https://pilihu2023-my.sharepoint.com/:i:/g/personal/pilihu_pilihu2023_onmicrosoft_com/EQ3LrS0CMz1ApN4tsH4ea6MBKeGqIPw7SC-YS9ycU5-SnQ?e=vBQIed">电报中文群组2-OneDrive</a></p>
]]></content>
      <categories>
        <category>Arch Linux</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hyprland指南(安装)</title>
    <url>/Hyprland-guide-install/</url>
    <content><![CDATA[<h1 id="这是我安装Hyprland的设备"><a href="#这是我安装Hyprland的设备" class="headerlink" title="这是我安装Hyprland的设备"></a>这是我安装Hyprland的设备</h1><ul>
<li>OS:Arch Linux</li>
<li>WM:Hyprland</li>
</ul>
<h1 id="安装-Hyprland"><a href="#安装-Hyprland" class="headerlink" title="安装 Hyprland"></a>安装 Hyprland</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paru -S hyprland-nvidia-git</span><br></pre></td></tr></table></figure>
<p><strong>这里建议使用 git 版本，否则<a href="https://github.com/PILIHU2022/My-Arch-configs">本仓库</a>的配置文件中会有参数不可用，我就是这样改了半天的配置:(</strong></p>
<h2 id="安装好了-Hyprland-之后，我们还需要安装一些软件，这对运行其他软件很有用"><a href="#安装好了-Hyprland-之后，我们还需要安装一些软件，这对运行其他软件很有用" class="headerlink" title="安装好了 Hyprland 之后，我们还需要安装一些软件，这对运行其他软件很有用"></a>安装好了 Hyprland 之后，我们还需要安装一些软件，这对运行其他软件很有用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paru -S cava kitty xdg-desktop-portal-hyprland-git qt5-base qt5-wayland qt6-base qt6-wayland</span><br></pre></td></tr></table></figure>

<h1 id="启动Hyprland"><a href="#启动Hyprland" class="headerlink" title="启动Hyprland"></a>启动Hyprland</h1><p><code>Hyprland</code></p>
<h1 id="All-done-Enjoy-it"><a href="#All-done-Enjoy-it" class="headerlink" title="All done! Enjoy it!"></a>All done! Enjoy it!</h1><h2 id="Writer-PILIHU2022"><a href="#Writer-PILIHU2022" class="headerlink" title="Writer:PILIHU2022"></a>Writer:PILIHU2022</h2>]]></content>
      <categories>
        <category>Guide</category>
      </categories>
      <tags>
        <tag>Hyprland</tag>
        <tag>Guides</tag>
      </tags>
  </entry>
  <entry>
    <title>从LX-Music转移到网易云音乐</title>
    <url>/Move-to-Netease-cloud-music/</url>
    <content><![CDATA[<h1 id="将歌单转移到网易云"><a href="#将歌单转移到网易云" class="headerlink" title="将歌单转移到网易云"></a>将歌单转移到网易云</h1><p>LX的备份文件虽然具有歌曲名等信息，可以以打开压缩包的形式打开备份文件，但是这并没有什么用，没办法导入到网易云。<br>只能用最愚蠢的方法：一个一个搜索歌曲名；<br>缺点不用多说：</p>
<ul>
<li>效率低下；</li>
<li>累人</li>
</ul>
<h2 id="方法2：使用网易云自带的识别但很鸡肋"><a href="#方法2：使用网易云自带的识别但很鸡肋" class="headerlink" title="方法2：使用网易云自带的识别但很鸡肋"></a>方法2：使用网易云自带的识别<del>但很鸡肋</del></h2><h1 id="在经过作者不懈地努力后，终于将我Lx-music中的歌曲转移到了网易云歌单"><a href="#在经过作者不懈地努力后，终于将我Lx-music中的歌曲转移到了网易云歌单" class="headerlink" title="在经过作者不懈地努力后，终于将我Lx-music中的歌曲转移到了网易云歌单"></a>在经过作者不懈地努力后，终于将我Lx-music中的歌曲转移到了网易云歌单</h1><h1 id="推广（网易云活动，推荐看完）："><a href="#推广（网易云活动，推荐看完）：" class="headerlink" title="推广（网易云活动，推荐看完）："></a>推广（网易云活动，推荐看完）：</h1><p>网易云推出了一个活动，为“免费听歌”，可在侧滑栏看到，看些广告就可以获得近4小时的免费听歌时间</p>
<h2 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h2><p><del>貌似现在没有要求了</del><br>非VIP用户吧？</p>
<h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1>]]></content>
      <tags>
        <tag>Other</tag>
      </tags>
  </entry>
  <entry>
    <title>论注册Steam</title>
    <url>/Register-Steam/</url>
    <content><![CDATA[<h1 id="关于Steam"><a href="#关于Steam" class="headerlink" title="关于Steam"></a>关于Steam</h1><p>Steam，一个游戏购买平台，<a href="https://zh.m.wikipedia.org/zh-cn/Steam">见Wikimedia</a></p>
<blockquote>
<p>Steam是Valve推出的电子游戏数字分发平台。2003年9月， Valve将其作为一款软件客户端推出，提供自动更新游戏的功能，这一功能在2005年末扩展到了第三方游戏发行商发行的作品。Steam集合了多种功能，如数字版权管理（DRM）、游戏服务器匹配和反作弊系统，以及社交网络和游戏流媒体服务。Steam还为用户提供自动更新游戏、游戏存档云存储，以及包括好友列表和游戏内聊天在内的社区功能。——维基百科</p>
</blockquote>
<p>Steam上有免费游戏也有付费游戏，付费的有Wallpaper Engine，免费的有CSGO2等。请自行探索</p>
<h1 id="如何注册Steam？"><a href="#如何注册Steam？" class="headerlink" title="如何注册Steam？"></a>如何注册Steam？</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>注册Steam，推荐使用PC设备，Linux，Windows，macOS均可（吧？）作者使用的是Arch Linux+Firefox<br>手机端使用了via和Firefox nightly都无法注册，卡在人机验证（反复提示未完成人机验证）</p>
<p><a href="https://store.steampowered.com/">Steam官网</a></p>
<p><a href="https://store.steampowered.com/join">注册Steam账号</a><br>注册建议开节点，作者这边广东电信打不开网页。<br>但是国家会随着IP而改变<br>但是可以更改，<a href="https://help.steampowered.com/zh-cn/faqs/view/2B3F-DAEF-846B-A0E8">见Steam</a></p>
<blockquote>
<p>如果您搬到了一个新的国家&#x2F;地区，或要长期居住海外，可以在使用该国家&#x2F;地区的支付方式完成首次购买后，更新自己的 Steam 国家&#x2F;地区设置。 如果您所在位置与自己当前 Steam 帐户的商店国家&#x2F;地区设置不同，则可以在查看购物车或完成购买时选择变更自己的商店地区。——Steam客服</p>
</blockquote>
<blockquote>
<p>示例：从德国移居到美国<br>假设您最近从德国移居到了美国。 结账时，您将能够在购物车页面上选择您当前所在的国家&#x2F;地区。 在此页面上，您可以选择美国以更新购物车、定价和支付方式选项。 使用美国的支付方式完成购买后，您的帐户所在国家&#x2F;地区将更新为美国。——Steam客服</p>
</blockquote>
<h2 id="跟着网页，需要填写什么就填写什么，邮箱可以使用QQ邮箱"><a href="#跟着网页，需要填写什么就填写什么，邮箱可以使用QQ邮箱" class="headerlink" title="跟着网页，需要填写什么就填写什么，邮箱可以使用QQ邮箱"></a>跟着网页，需要填写什么就填写什么，邮箱可以使用QQ邮箱</h2><h1 id="All-done-Enjoy-it"><a href="#All-done-Enjoy-it" class="headerlink" title="All done ! Enjoy it!"></a>All done ! Enjoy it!</h1><h1 id="Writer-PILIHU"><a href="#Writer-PILIHU" class="headerlink" title="Writer:PILIHU"></a>Writer:PILIHU</h1>]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>Others</tag>
      </tags>
  </entry>
  <entry>
    <title>免信用卡申请Cloudflare Zero Trust</title>
    <url>/Request-Cloudflare-Warp/</url>
    <content><![CDATA[<h1 id="客户端们"><a href="#客户端们" class="headerlink" title="客户端们"></a>客户端们</h1><p>Android：<a href="https://pilihu2023-my.sharepoint.com/:u:/g/personal/pilihu_pilihu2023_onmicrosoft_com/ERwqnqCENdpNu3lZDh2Yf24BG8JUk3J1-2PYzGyJgIMIBg?e=eLDgjg">Cloudflare One Agent</a><br>Windows；macOS；Linux等见<a href="https://1.1.1.1/">官网</a><br>官方说明了在iOS和Android下使用Zero Trust的必须切换为Cloudflare One Agent，而Windows；macOS；Linux则不需要操作：</p>
<blockquote>
<p>macOS, Windows, and Linux<br>No action is required for desktop clients at this time. The existing Cloudflare WARP client will continue to support both Zero Trust and 1.1.1.1 functionality.<br>​​iOS and Android<br>Zero Trust users must migrate from the 1.1.1.1 app to the Cloudflare One Agent app by 2023-12-31.<br>Organizations can migrate their teams with minimal disruption in one of two modes: manually or via a managed endpoint solution.<br>Migration impact</p>
<ul>
<li>New Zero Trust features will only be released to the Cloudflare One Agent.</li>
<li>The 1.1.1.1 app will continue to support the current feature set (and any security updates) through 2023-12-31.</li>
<li>All Zero Trust functionality will be removed from 1.1.1.1 app versions released after 2023-12-31. Zero Trust will continue to work on 1.1.1.1 app versions released prior to 2023-12-31.</li>
</ul>
</blockquote>
<h1 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h1><h2 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h2><p><a href="https://youtu.be/5XMrQEPgY88?si=dv1ADYJ5OlfZqH38">https://youtu.be/5XMrQEPgY88?si=dv1ADYJ5OlfZqH38</a><br><a href="https://youtu.be/XkKt8LDhDQk?si=vmXVaxbyfgXIAEof">https://youtu.be/XkKt8LDhDQk?si=vmXVaxbyfgXIAEof</a></p>
<h2 id="搬运"><a href="#搬运" class="headerlink" title="搬运"></a>搬运</h2><p><a href="https://pilihu2023-my.sharepoint.com/:f:/g/personal/pilihu_pilihu2023_onmicrosoft_com/EoP43Tll21ZKk2zShIcUZfgBlHp-4um5zLgCsa5PZd02Pw">https://pilihu2023-my.sharepoint.com/:f:/g/personal/pilihu_pilihu2023_onmicrosoft_com/EoP43Tll21ZKk2zShIcUZfgBlHp-4um5zLgCsa5PZd02Pw</a></p>
<h1 id="开始实际操作"><a href="#开始实际操作" class="headerlink" title="开始实际操作"></a>开始实际操作</h1><ol>
<li>打开<a href="https://www.cloudflare-cn.com/">Cloudflare官网</a>登录，若无账号可以注册，不需要特殊手段，QQ邮箱即可</li>
<li>点击菜单中的Zero Trust</li>
<li>在输入框中输入你想要的组织名</li>
<li>选择计划，免费即可，若有特殊需求可以选择其他的，在‘Free’一栏中点击select plan</li>
<li>点击proceed to payment</li>
<li>点击‘add payment method’</li>
<li>等待页面完全加载完后关闭标签页（选择付费计划的需添加）</li>
<li>打开<a href="https://www.cloudflare-cn.com/">Cloudflare官网</a>重新登录，再打开Zero Trust就可以进入了</li>
<li>侧边栏选择‘My Team’</li>
</ol>
<ul>
<li><del>不出意外的话应该会出意外</del>，会没有提示添加设备，不要慌张，点击‘My Team’ -&gt; ‘List’，再回到刚刚的页面，即可看见<br><img src="https://s1.imagehub.cc/images/2024/01/17/79ae12aeae61a4d7541db018dd92130f.png" alt="Cloudflare Zero Trust连接客户端">]</li>
</ul>
<ol start="10">
<li>点击‘connect a device’</li>
<li>点击‘create a device enrollment policy’</li>
<li>在输入框中输入邮箱地址后缀，如‘@qq.com’等</li>
</ol>
<h1 id="在已安装的客户端中输入你的地址，为‘-cloudflareaccess-com’，我们只需要填写‘-’即可"><a href="#在已安装的客户端中输入你的地址，为‘-cloudflareaccess-com’，我们只需要填写‘-’即可" class="headerlink" title="在已安装的客户端中输入你的地址，为‘*.cloudflareaccess.com’，我们只需要填写‘*’即可"></a>在已安装的客户端中输入你的地址，为‘*.cloudflareaccess.com’，我们只需要填写‘*’即可</h1><p><mark>注：此处的‘*’指你起的团队名称</mark></p>
<h1 id="在弹出的页面中输入你自己的邮箱（要真实邮箱，用于接受验证码）"><a href="#在弹出的页面中输入你自己的邮箱（要真实邮箱，用于接受验证码）" class="headerlink" title="在弹出的页面中输入你自己的邮箱（要真实邮箱，用于接受验证码）"></a>在弹出的页面中输入你自己的邮箱（要真实邮箱，用于接受验证码）</h1><h1 id="在邮箱中复制验证码填写即可"><a href="#在邮箱中复制验证码填写即可" class="headerlink" title="在邮箱中复制验证码填写即可"></a>在邮箱中复制验证码填写即可</h1><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1>]]></content>
      <categories>
        <category>白嫖</category>
      </categories>
      <tags>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>注册eu.org域名及其他</title>
    <url>/Request-eu.org/</url>
    <content><![CDATA[<h1 id="该文章未完成！"><a href="#该文章未完成！" class="headerlink" title="该文章未完成！"></a><font color='red' size=10>该文章未完成！</font></h1><div class="note warning flat"><p>Warning: 最近 nic.eu.org 网站出现问题，导致作者无法完成该文章，网站恢复后立即完成！</p>
</div>

<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Eu.org名称如此，但是它与欧盟没有任何关系<br>Eu.org提供了域名（被Cloudflare认为顶域，可绑定）</p>
<h1 id="开始申请"><a href="#开始申请" class="headerlink" title="开始申请"></a>开始申请</h1><h2 id="注册账户"><a href="#注册账户" class="headerlink" title="注册账户"></a>注册账户</h2><p>注册账户需要一个真实邮箱，用于验证，可用QQ邮箱<br>信息可随便填写，手机号不用验证。</p>
<h2 id="验证用户"><a href="#验证用户" class="headerlink" title="验证用户"></a>验证用户</h2><p>打开邮箱的收件箱，看见一个名为‘<a href="mailto:&#110;&#111;&#114;&#101;&#x70;&#x6c;&#121;&#x40;&#110;&#105;&#x63;&#x2e;&#101;&#x75;&#x2e;&#x6f;&#x72;&#x67;">&#110;&#111;&#114;&#101;&#x70;&#x6c;&#121;&#x40;&#110;&#105;&#x63;&#x2e;&#101;&#x75;&#x2e;&#x6f;&#x72;&#x67;</a>’<br>若无可以看看垃圾箱，点击链接即可验证</p>
<h2 id="登录账号"><a href="#登录账号" class="headerlink" title="登录账号"></a>登录账号</h2><p>打开<a href="https://nic.eu.org/">官网</a><br><img src="https://s1.imagehub.cc/images/2024/01/22/7989f91978f8e9a32920ed100f90d3f1.png" alt="nic.eu.org主界面.png"><br>在‘Sign-in or sign-up here!’点击‘here’来登录，</p>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>eu.org</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Clash-Meta及所遇到的问题</title>
    <url>/Use-Clash-Meta/</url>
    <content><![CDATA[<h1 id="clash-meta是一个clash的内核分支，它支持WireGuard协议，所以我选择他（"><a href="#clash-meta是一个clash的内核分支，它支持WireGuard协议，所以我选择他（" class="headerlink" title="clash-meta是一个clash的内核分支，它支持WireGuard协议，所以我选择他（"></a>clash-meta是一个clash的内核分支，它支持WireGuard协议，所以我选择他（</h1><h1 id="安装clash-meta"><a href="#安装clash-meta" class="headerlink" title="安装clash-meta"></a>安装clash-meta</h1><p>使用该操作你需要使用Arch LinuxCN源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S clash-meta</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>首先到<code>/etc/clash-meta</code>中，你应该会看见以下文件：<br><code>/etc/clash-meta</code></p>
]]></content>
      <categories>
        <category>Clash</category>
      </categories>
      <tags>
        <tag>Clash</tag>
      </tags>
  </entry>
</search>
