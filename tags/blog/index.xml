<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Blog - 标签 - PILIHU&#39;s Blog</title>
    <link>https://pilihu2022.github.io/tags/blog/</link>
    <description>Blog - 标签 | PILIHU&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>简体中文</language><managingEditor>2812167783@qq.com (PILIHU(Spark))</managingEditor>
      <webMaster>2812167783@qq.com (PILIHU(Spark))</webMaster><lastBuildDate>Thu, 18 Jul 2024 12:00:59 &#43;0000</lastBuildDate><atom:link href="https://pilihu2022.github.io/tags/blog/" rel="self" type="application/rss+xml" /><item>
  <title>使用Hugo搭建Blog</title>
  <link>https://pilihu2022.github.io/posts/hugo-blog/</link>
  <pubDate>Thu, 18 Jul 2024 12:00:59 &#43;0000</pubDate>
  <author>PILIHU(Spark)</author>
  <guid>https://pilihu2022.github.io/posts/hugo-blog/</guid>
  <description><![CDATA[Hugo介绍 Hugo是世界上最快的构建网页的框架
—— Hugo官网 安装Hugo Arch Linux：
1 sudo pacman -S hugo 其余发行版请自行使用包管理器搜索并安装
开始使用 首先创建一个空白网站
1 hugo new site &lt;Site_name&gt; 注意 这个操作会创建一个文件夹，包含Hugo的默认文件 安装主题 博客是写给自己看的 所以挑选一个自己心仪的主题很重要。
你可以在Hugo的主题网站中查找 技巧 建议查找更新日期较近的主题，以避免有废弃的主题（可能失去了作者支持）。当然，只要你喜欢就好:) 然后你可以点击Download按钮，以跳转至GitHub页面，查看README.md以安装主题。
这里以FixIt主题为例 FixIt主题网站，你可以查看文档
转至GitHub页面，你可以提出issue和pull request以解决问题和完善文档\
安装主题 切换到博客目录，执行
1 git init 来初始化一个空的Git存储库（之后用于GitHub Actions自动构建部署网站） 将[FixIt]主题作为Git子模块添加到你的项目中的themes目录。
1 git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt 备份目录中的hugo.toml文件，并将主题中的hugo.toml文件复制出来
1 mv hugo.toml hugo.toml.back &amp;&amp; cp /themes/FixIt/hugo.toml ./ 在站点配置文件中添加一行，指定当前主题。
1 echo &#34;theme = &#39;FixIt&#39;&#34; &gt;&gt; hugo.toml 在站点配置文件中添加一行，指定默认的内容语言。
1 echo &#34;defaultContentLanguage = &#39;zh-cn&#39;&#34; &gt;&gt; hugo.]]></description>
</item>
<item>
  <title>实现自动更新Blog(GitHub Actions&#43;Hexo deploy)</title>
  <link>https://pilihu2022.github.io/posts/auto-update-bloggithub-actions-hexo-deploy/</link>
  <pubDate>Fri, 12 Jan 2024 22:49:09 &#43;0000</pubDate>
  <author>PILIHU(Spark)</author>
  <guid>https://pilihu2022.github.io/posts/auto-update-bloggithub-actions-hexo-deploy/</guid>
  <description><![CDATA[坑已挖，等待填补 To be complete ]]></description>
</item>
<item>
  <title>实现自动更新Blog(actions-gh-page)</title>
  <link>https://pilihu2022.github.io/posts/auto-update-bloggithub-actions-actions-gh-page/</link>
  <pubDate>Fri, 12 Jan 2024 22:47:52 &#43;0000</pubDate>
  <author>PILIHU(Spark)</author>
  <guid>https://pilihu2022.github.io/posts/auto-update-bloggithub-actions-actions-gh-page/</guid>
  <description><![CDATA[简介 群友“竹林里有冰”的Blog有一个部署方案，如下： 我的博客部署方案
开始码GitHub Actions代码 如果不想写的话可以借鉴： 1 PILIHU2022.github.io/Actions 2 竹林里有冰的代码
安装Node.js 由于GitHub Actions没法使用Ubuntu的apt包管，所以只能使用actions/nodejs，使用@来指定版本，我这里指定的是version 3中的Node.js 21版本，代码中的actions/checkout只用于切换到该仓库;
安装相关依赖 你需要将你本地仓库中的package.json添加到GitHub仓库中，代码中是这样的:
1 2 3 4 - name: Install Dependencies run: npm install; # 分号不可省略，否则将会被识别成一条命令 npm update # 更新安装的软件（Hexo等） 为每个文件重新设定最后修改时间 这一步其实是挺重要的，Hexo框架生成每篇文章的最后修改时间的依据是该文件的最后修改时间，而对于 Github Action 的容器来说，每一个文件都刚刚被下载下来，都是最新的，这就会导致你的每一篇文章每次部署时都会被认为刚才修改过。 我们这边可以直接使用 git 记录的时间来作为文件的最后修改时间。
设置时区 Blog基本都是用来给自己看的 所以时区当然要设置成中国标准时间（东八区） 使用
1 export = TZ=&#39;Asia/Shanghai&#39; 生成网页 1 yarn build 如果不需要部署到VPS的到此处就可以了
以下是使用GitHub Pages来更新Blog（该段未完成） 若想部署到VPS，参考部署到VPS
Q:为什么我已经将GitHub Actions搞定了，且将博文上传至GitHub仓库了，但是没有更新，GitHub Actions也没有报错 A:请检查你的GitHub Pages设置（位置在Settings &gt; Pages）中的“Build and deployment”，在source中选择Deploy from a branch]]></description>
</item>
</channel>
</rss>
