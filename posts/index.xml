<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on PILIHU&#39;s Blog</title>
    <link>https://hugo.pilihu.us.kg/posts/</link>
    <description>Recent content in Posts on PILIHU&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>简体中文</language>
    <lastBuildDate>Tue, 16 Jul 2024 12:29:38 +0800</lastBuildDate>
    <atom:link href="https://hugo.pilihu.us.kg/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arch Linux自动登录</title>
      <link>https://hugo.pilihu.us.kg/posts/auto-login-arch/</link>
      <pubDate>Mon, 12 Feb 2024 22:18:02 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/auto-login-arch/</guid>
      <description>Arch Linux怎么自动登录，而且是免密的，应该会有一些人会这样想，毕竟如果用户名的密码过长，而且密码错以后又要重输，想必是让人血压升高的问题。今天，教程来了 当然免密登录也会出现一些安全问题 本教程具有一定的时限性，具体操作以Arch Wiki为准！ 参考Arch Wiki:Getty 开始操作 1 sudo pacman -S util-linux 若已安装可不用重新安装&#xA;写入一个systemd服务文件: 1 sudo nvim /etc/systemd/system/getty@tty1.service.d/override.conf 若没有getty@1.service.d文件夹，请创建: 1 sudo mkdir /etc/systemd/system/getty@tty1.service.d 将以下代码写入/etc/systemd/system/getty@tty1.service.d/override.conf中:&#xA;1 2 3 [Service] ExecStart= ExecStart=-/usr/bin/agetty --autologin username --noclear %I $TERM 注:这里的username要更改为你的用户名,不能照抄别问我是怎么知道的&#xA;若你不知道你的用户名，请使用以下命令来查看&#xA;1 whoami 启动该服务 1 sudo systemctl enable getty@tty1 抢救方法(如果没有照抄上面的代码,可以不看) 我们先解析一下服务文件名,从&amp;quot;getty@tty1&amp;quot;中，我们得知这个服务是针对tty1的，对其他tty不受影响(如tty2)&#xA;切换到其他tty 按住Ctrl+shift+&amp;lt;F2&amp;gt;切换到tty2，然后登录用户，修改刚刚的配置文件&#xA;1 sudo nvim /etc/systemd/system/getty@tty1.service.d/override.conf 然后将username改为你的用户名&#xA;来看看作者是怎么修的 重启进入liveCD，挂载Arch Linux所在的硬盘，然后修改配置文件&#xA;1 sudo vim /mnt/etc/systemd/system/getty@tty1.service.d/override.conf 将username修改为我的用户名，重启</description>
    </item>
    <item>
      <title>提取Cloudflare Zero Trust节点</title>
      <link>https://hugo.pilihu.us.kg/posts/get-cloudflare-node/</link>
      <pubDate>Tue, 06 Feb 2024 14:07:46 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/get-cloudflare-node/</guid>
      <description>本文记录作者提取Cloudflare Zero Trust的节点的过程以及所用的工具 开始 首先需要你有一个Cloudflare账号，并且有Zero Trust，没有可以看这篇文章&#xA;开始操作 首先介绍一下作者的设备： OS:Arch Linux 内核:linux-zen6.7.3 Clash-meta 1.18.1-2 由于Cloudflare Zero Trust是使用WireGuard协议，所以我们需要使用一个支持WireGuard协议的客户端，可以更换为其他的&#xA;本文以Arch Linux为例&#xA;首先 介绍一下作者提取节点时所用到的工具：&#xA;Warp2Clash by CMLiussss 优选IP脚本 by MisakaNo 提取PrivateKey和PublicKey的工具 by MisakaNo(WGCF)&#xA;或 提取PrivateKey和PublicKey的工具 by MisakaNo(Warp-go) 开始操作 首先你需要提取出来你的Zero Trust的PrivateKey和PublicKey，没有的话可以看这里&#xA;将Warp2Clash脚本下载下来：&#xA;1 wget -N -P Warp2Clash https://raw.githubusercontent.com/cmliu/Warp2Clash/main/W2C_start.sh &amp;amp;&amp;amp; cd Warp2Clash &amp;amp;&amp;amp; chmod +x W2C_start.sh 若你有WARP账户许可证密钥，可以使用以下命令： 1 ./W2C_start.sh {WARP账户许可证密钥} 如果你有PrivateKey和PublicKey的话可以使用以下命令： 1 ./W2C_start.sh {PrivateKey} {PublicKey} {IPv6} 获取PrivateKey和PublicKey 首先打开提取工具，然后按照提示填写，Zero Trust用户选择“3”，然后访问网站并且将token复制到控制台回车，然后等待即可获取到PrivateKey和PublicKey，保留备用 优选IP，将优选IP脚本下载下来： 1 wget -N https://gitlab.com/Misaka-blog/warp-script/-/raw/main/files/warp-yxip/warp-yxip.sh 然后为脚本添加运行权限：&#xA;1 chmod +x .</description>
    </item>
    <item>
      <title>在Arch Linux上安装AMD显卡驱动</title>
      <link>https://hugo.pilihu.us.kg/posts/install-amd-graphics-on-arch/</link>
      <pubDate>Sat, 27 Jan 2024 20:45:01 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/install-amd-graphics-on-arch/</guid>
      <description>设备: 显卡：AMD Radeon RX 6500 XT 参照Wiki 如果动手能力及理解能力比较好的话可以参考ArchWiki： AMDGPU ATI Arch简明指南-Arch显卡驱动（不推荐！可能更新不及时，不过你可以参考一下那里的查看显卡架构小结） {% note warning %} Warning：不要查看野教程！！不要查看野教程！！不要查看野教程！！ {% endnote %}&#xA;安装 如果你碰巧与我使用的显卡是一样的，很好，你仍可能需要参照Wiki 此处以AMD Radeon RX 6500 XT为例，安装AMDGPU驱动，ATI驱动请自行Google和参照Arch Wiki 首先需要安装mesa包，使用以下命令：&#xA;1 sudo pacman -S mesa lib32-mesa # lib32-mesa是对于32位程序，需要开启multilib 添加DDX驱动支持：&#xA;1 sudo pacman -S xf86-video-amdgpu 在Wiki上所提到的其他软件，可以按需求安装，但是安装后的llvm和llvm-libs是没有-git结尾，否则，请重新安装llvm和llvm-libs：&#xA;1 sudo pacman -S llvm llvm-libs 如果遇到有包依赖，请卸载掉(因为这些包大概都可能是以-git)结尾的，安装好llvm和llvm-libs后再安装回刚刚卸载的包(应该是没有-git结尾的)&#xA;以下是我求助的图片及帖文 帖文&#xA;电报中文群组1-图床 电报中文群组2-图床&#xA;电报中文群组1-OneDrive 电报中文群组2-OneDrive</description>
    </item>
    <item>
      <title>从LX-Music转移到网易云音乐</title>
      <link>https://hugo.pilihu.us.kg/posts/move-to-netease-cloud-music/</link>
      <pubDate>Mon, 22 Jan 2024 20:15:29 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/move-to-netease-cloud-music/</guid>
      <description>将歌单转移到网易云 LX的备份文件虽然具有歌曲名等信息，可以以打开压缩包的形式打开备份文件，但是这并没有什么用，没办法导入到网易云。 只能用最愚蠢的方法：一个一个搜索歌曲名； 缺点不用多说：&#xA;效率低下； 累人 方法2：使用网易云自带的识别但很鸡肋 在经过作者不懈地努力后，终于将我Lx-music中的歌曲转移到了网易云歌单 推广（网易云活动，推荐看完）： 网易云推出了一个活动，为“免费听歌”，可在侧滑栏看到，看些广告就可以获得近4小时的免费听歌时间&#xA;要求： 貌似现在没有要求了 非VIP用户吧？&#xA;The end </description>
    </item>
    <item>
      <title>注册eu.org域名及其他</title>
      <link>https://hugo.pilihu.us.kg/posts/request-eu.org/</link>
      <pubDate>Fri, 19 Jan 2024 21:58:46 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/request-eu.org/</guid>
      <description>该文章未完成！ {% note warning %} Warning: 最近 nic.eu.org 网站出现问题，导致作者无法完成该文章，网站恢复后立即完成！ {% endnote %}&#xA;介绍 Eu.org名称如此，但是它与欧盟没有任何关系 Eu.org提供了域名（被Cloudflare认为顶域，可绑定）&#xA;开始申请 注册账户 注册账户需要一个真实邮箱，用于验证，可用QQ邮箱 信息可随便填写，手机号不用验证。&#xA;验证用户 打开邮箱的收件箱，看见一个名为‘noreply@nic.eu.org’ 若无可以看看垃圾箱，点击链接即可验证&#xA;登录账号 打开官网 在‘Sign-in or sign-up here!’点击‘here’来登录，</description>
    </item>
    <item>
      <title>使用Clash-Meta及所遇到的问题</title>
      <link>https://hugo.pilihu.us.kg/posts/use-clash-meta/</link>
      <pubDate>Thu, 18 Jan 2024 17:46:58 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/use-clash-meta/</guid>
      <description>clash-meta是一个clash的内核分支，它支持WireGuard协议，所以我选择他（ 安装clash-meta 使用该操作你需要使用Arch LinuxCN源&#xA;1 sudo pacman -S clash-meta 使用 首先到/etc/clash-meta中，你应该会看见以下文件： /etc/clash-meta</description>
    </item>
    <item>
      <title>免信用卡申请Cloudflare Zero Trust</title>
      <link>https://hugo.pilihu.us.kg/posts/request-cloudflare-warp/</link>
      <pubDate>Wed, 17 Jan 2024 23:05:59 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/request-cloudflare-warp/</guid>
      <description>客户端们 Android：Cloudflare One Agent Windows；macOS；Linux等见官网 官方说明了在iOS和Android下使用Zero Trust的必须切换为Cloudflare One Agent，而Windows；macOS；Linux则不需要操作：&#xA;macOS, Windows, and Linux No action is required for desktop clients at this time. The existing Cloudflare WARP client will continue to support both Zero Trust and 1.1.1.1 functionality. ​​iOS and Android Zero Trust users must migrate from the 1.1.1.1 app to the Cloudflare One Agent app by 2023-12-31. Organizations can migrate their teams with minimal disruption in one of two modes: manually or via a managed endpoint solution.</description>
    </item>
    <item>
      <title>实现自动更新Blog(GitHub Actions&#43;Hexo deploy)</title>
      <link>https://hugo.pilihu.us.kg/posts/auto-update-bloggithub-actions-hexo-deploy/</link>
      <pubDate>Fri, 12 Jan 2024 22:49:09 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/auto-update-bloggithub-actions-hexo-deploy/</guid>
      <description>坑已挖，等待填补 To be complete </description>
    </item>
    <item>
      <title>实现自动更新Blog(actions-gh-page)</title>
      <link>https://hugo.pilihu.us.kg/posts/auto-update-bloggithub-actions-actions-gh-page/</link>
      <pubDate>Fri, 12 Jan 2024 22:47:52 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/auto-update-bloggithub-actions-actions-gh-page/</guid>
      <description>简介 群友“竹林里有冰”的Blog有一个部署方案，如下： 我的博客部署方案&#xA;开始码GitHub Actions代码 如果不想写的话可以借鉴： 1 PILIHU2022.github.io/Actions 2 竹林里有冰的代码&#xA;安装Node.js 由于GitHub Actions没法使用Ubuntu的apt包管，所以只能使用actions/nodejs，使用@来指定版本，我这里指定的是version 3中的Node.js 21版本，代码中的actions/checkout只用于切换到该仓库;&#xA;安装相关依赖 你需要将你本地仓库中的package.json添加到GitHub仓库中，代码中是这样的:&#xA;1 2 3 4 - name: Install Dependencies run: npm install; # 分号不可省略，否则将会被识别成一条命令 npm update # 更新安装的软件（Hexo等） 为每个文件重新设定最后修改时间 这一步其实是挺重要的，Hexo框架生成每篇文章的最后修改时间的依据是该文件的最后修改时间，而对于 Github Action 的容器来说，每一个文件都刚刚被下载下来，都是最新的，这就会导致你的每一篇文章每次部署时都会被认为刚才修改过。 我们这边可以直接使用 git 记录的时间来作为文件的最后修改时间。&#xA;设置时区 Blog基本都是用来给自己看的 所以时区当然要设置成中国标准时间（东八区） 使用&#xA;1 export = TZ=&amp;#39;Asia/Shanghai&amp;#39; 生成网页 1 yarn build 如果不需要部署到VPS的到此处就可以了&#xA;以下是使用GitHub Pages来更新Blog（该段未完成） 若想部署到VPS，参考部署到VPS&#xA;Q:为什么我已经将GitHub Actions搞定了，且将博文上传至GitHub仓库了，但是没有更新，GitHub Actions也没有报错 A:请检查你的GitHub Pages设置（位置在Settings &amp;gt; Pages）中的“Build and deployment”，在source中选择Deploy from a branch</description>
    </item>
    <item>
      <title>新年快乐！</title>
      <link>https://hugo.pilihu.us.kg/posts/happy-new-year-2024/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/happy-new-year-2024/</guid>
      <description>Happy New Year! 本Blog在此祝大家新年快乐！ 再见2023，你好2024！ Goodbye 2023,Hello2024! </description>
    </item>
    <item>
      <title>论注册Steam</title>
      <link>https://hugo.pilihu.us.kg/posts/register-steam/</link>
      <pubDate>Sat, 16 Dec 2023 21:59:54 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/register-steam/</guid>
      <description>关于Steam Steam，一个游戏购买平台，见Wikimedia&#xA;Steam是Valve推出的电子游戏数字分发平台。2003年9月， Valve将其作为一款软件客户端推出，提供自动更新游戏的功能，这一功能在2005年末扩展到了第三方游戏发行商发行的作品。Steam集合了多种功能，如数字版权管理（DRM）、游戏服务器匹配和反作弊系统，以及社交网络和游戏流媒体服务。Steam还为用户提供自动更新游戏、游戏存档云存储，以及包括好友列表和游戏内聊天在内的社区功能。——维基百科&#xA;Steam上有免费游戏也有付费游戏，付费的有Wallpaper Engine，免费的有CSGO2等。请自行探索&#xA;如何注册Steam？ 描述 注册Steam，推荐使用PC设备，Linux，Windows，macOS均可（吧？）作者使用的是Arch Linux+Firefox 手机端使用了via和Firefox nightly都无法注册，卡在人机验证（反复提示未完成人机验证）&#xA;Steam官网&#xA;注册Steam账号 注册建议开节点，作者这边广东电信打不开网页。 但是国家会随着IP而改变 但是可以更改，见Steam&#xA;如果您搬到了一个新的国家/地区，或要长期居住海外，可以在使用该国家/地区的支付方式完成首次购买后，更新自己的 Steam 国家/地区设置。 如果您所在位置与自己当前 Steam 帐户的商店国家/地区设置不同，则可以在查看购物车或完成购买时选择变更自己的商店地区。——Steam客服&#xA;示例：从德国移居到美国 假设您最近从德国移居到了美国。 结账时，您将能够在购物车页面上选择您当前所在的国家/地区。 在此页面上，您可以选择美国以更新购物车、定价和支付方式选项。 使用美国的支付方式完成购买后，您的帐户所在国家/地区将更新为美国。——Steam客服&#xA;跟着网页，需要填写什么就填写什么，邮箱可以使用QQ邮箱 All done ! Enjoy it! Writer:PILIHU </description>
    </item>
    <item>
      <title>Arch Linux安装教程(BIOS)</title>
      <link>https://hugo.pilihu.us.kg/posts/how-to-install-archbios/</link>
      <pubDate>Tue, 15 Aug 2023 13:18:20 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/how-to-install-archbios/</guid>
      <description>本文介绍Arch Linux安装，以BIOS方式为例 本文所输入的命令均可用Tab键补全 前言 Arch Linux官方安装指南 Arch Linux镜像下载地址USTC，2023.07.01 注意： Arch Linux 安装镜像不支持安全启动（Secure Boot）注意： Arch Linux 安装镜像不支持安全启动（Secure Boot）,详见wiki 前面说了一堆废话现在开始实操 开始安装 启动后，先禁用reflector服务&#xA;1 sudo systemctl stop reflector 这个服务主要是从Arch Linux Mirror Status 页面获取最新的镜像列表，然后筛选出最新的镜像并按速度排序，最后将结果写入到 /etc/pacman.d/mirrorlist 文件。 但它很鸡肋，手动添加镜像站会更好 更多关于该服务请见Wiki&#xA;添加的镜像站主要是USTC的镜像站或者清华镜像站 如果不想手动安装Arch的话可以使用archinstall: 1 archinstall 详见Wiki&#xA;连接网络 1 ip link 要连接到网络： 有线以太网 —— 连接网线。 WiFi —— 使用 iwctl 验证无线网络。 移动宽带调制解调器（移动网卡） - 使用 mmcli 实用程序连接到移动网络。&#xA;配置网络连接： DHCP：对于有线以太网、无线局域网（WLAN）和无线广域网（WWAN）网络接口来说，动态 IP 地址和 DNS 服务器分配（由 systemd-networkd 和 systemd-resolved 提供功能）能够开箱即用。 静态 IP 地址：按照静态 IP 地址进行操作。</description>
    </item>
    <item>
      <title>Hyprland指南(安装常用软件)</title>
      <link>https://hugo.pilihu.us.kg/posts/hyprland-guide-install-useful-programs/</link>
      <pubDate>Tue, 15 Aug 2023 10:06:00 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/hyprland-guide-install-useful-programs/</guid>
      <description>Hyprland指南(安装常用软件) 安装VScode 全称为Visual Studio CodeAUR，由于名字太长所以被人们简化成VSC(吧？)不用管这些，我们只是用这个来码代码(屎山)&#xA;1 paru -S visual-studio-code-bin 然后就跟着VSC的提示来安装中文语言包，装好就不用我说了吧？ 如果嫌调字体麻烦的话可以来到我的配置仓库，在里面的settings(VSC).json中，有一个//设置字体，把里面的内容复制到你的VSC配置文件中，路径如下: ~/.config/code/User/ 字体的话需要安装如下:(自己配置的话可跳过)&#xA;1 paru -S ttf-cascadia-code nerd-fonts-completle 鸿蒙黑体也是可以的，但是在系统上使用似乎会出现有的字体大，有的字体小的问题，我没有进一步研究。 只记得要装这两个，还有些忘了 微软雅黑的话可以换成别的字体&#xA;剩下的就自己折腾吧 安装QQ 这个可没有配置文件照抄了，直接执行：&#xA;1 paru -S linuxqq 安装即可，若出现闪退情况，请参阅 AUR-LinuxQQ评论区&#xA;Markdown编辑软件 Typora UI可以，可以实时预览，支持快捷键，但是不支持修改快捷键，Markdown的功能基本都有，就是要￥ VNote 开源，不可以实时预览，支持快捷键，支持修改快捷键，有能力的甚至可以自定义主题以及样式，有待改进 Marktext 在Windows上用过，不过是20年的事，不知道现在咋样了，听说可以实时预览了，有兴趣的可以试试 下面以安装VNote为例： 1 paru -S vnote-appimage 在AUR中有一个包名叫做vnote的,我试过,无法使用中文输入,所以使用vnote-appimage&#xA;安装Typora 1 sudo pacman -S Typora 当然,这是有米的人的操作&#xA;想使用破解版的可以添加zzy-ac源(有米的人可以跳过) 在/etc/pacman.conf中添加: ` [zzy-ac] SigLevel=Never&#xA;Server = https://github.com/zzy-ac/repo/releases/download/x86_64/&#xA;Server = https://gh.dmnb.cf/https://github.com/zzy-ac/repo/releases/download/x86_64 ` 安装Typora&#xA;1 sudo pacman -S zzy-ac/typora-electron-crack All done! Enjoy it!</description>
    </item>
    <item>
      <title>Hyprland指南(安装)</title>
      <link>https://hugo.pilihu.us.kg/posts/hyprland-guide-install/</link>
      <pubDate>Mon, 14 Aug 2023 15:25:00 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/hyprland-guide-install/</guid>
      <description>这是我安装Hyprland的设备 OS:Arch Linux WM:Hyprland 安装 Hyprland 1 paru -S hyprland-nvidia-git 这里建议使用 git 版本，否则本仓库的配置文件中会有参数不可用，我就是这样改了半天的配置:(&#xA;安装好了 Hyprland 之后，我们还需要安装一些软件，这对运行其他软件很有用 1 paru -S cava kitty xdg-desktop-portal-hyprland-git qt5-base qt5-wayland qt6-base qt6-wayland 启动Hyprland Hyprland&#xA;All done! Enjoy it! Writer:PILIHU2022 </description>
    </item>
    <item>
      <title>Hyprland指南(安装其他软件)</title>
      <link>https://hugo.pilihu.us.kg/posts/hyprland-guide-install-other-programs/</link>
      <pubDate>Mon, 14 Aug 2023 15:25:00 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/hyprland-guide-install-other-programs/</guid>
      <description>Hyprland指南(第二篇) 若想使用通知，需要安装 dunst 如下:&#xA;1 sudo pacman -S dunst 然后将本仓库的/dunst 复制到~/.config/dunst 中，若没有该文件夹，则创建一个 dunst 的文件夹，否则 dunst 不会读取并且使用的。 都用 Arch Linux 了，不会连创建文件夹都不会吧？ 为了避免有人不会创建文件夹&#xA;1 mkdir ~/.config/dunst 然后设置自启动： 在~/.config/hypr/hyprland.conf中添加： exec-once = dunst&#xA;若想实现类似于 i3-status 的功能（状态栏），需要安装 waybar 如下:&#xA;1 paru -S waybar-git 然后将本仓库中的/waybar 文件夹复制到~/.config/hypr 中可以新建文件夹，也可以不用然后记住 waybar 文件夹中的 config.jsonc 和 style.css 路径（完整路径） 设置自启动： 在~/.config/hypr/hyprland.conf 中写入： exec-once = waybar -c $WAYBAR/config.jsonc -s $WAYBAR/style.css 其中的$WAYBAR 为你的 waybar 具体路径&#xA;若想输入中文，你需要安装输入法 若想使用fcitx5的中文输入法(非rime) 1 sudo pacman -S fcitx5-im fcitx5-chinese fcitx5-pinyin-moegirl fcitx5-material-color # 安装输入法相关软件包，词库，主题 此处以安装rime输入法为例，其他输入法同理，不过推荐使用fcitx5 1 sudo pacman -S fcitx5-rime 我使用的就是rime输入法，不过我感觉输入体验是不如搜狗输入法，将就着用吧</description>
    </item>
    <item>
      <title>Arch Linux安装教程(以Legacy BIOS为例)</title>
      <link>https://hugo.pilihu.us.kg/posts/how-to-install-archbiosxiaoice/</link>
      <pubDate>Fri, 06 Jan 2023 13:30:43 +0000</pubDate>
      <guid>https://hugo.pilihu.us.kg/posts/how-to-install-archbiosxiaoice/</guid>
      <description>Arch Linux安装教程 （以Legacy BIOS为例） 最后更新于2023年01月06日 1.Arch Linux &amp;amp; KDE 的安装及配置—— 零、系统镜像的下载 &amp;amp; 安装介质的制作 &amp;amp; BIOS 的设置 点击此处下载系统镜像并校验SHA256镜像的完整性。校验无误后，使用Ventoy制作安装介质。（如果是首次使用Ventoy，请点击此处查看使用方法）然后进入BIOS，将安全启动和快速启动关闭并将安装介质（如U盘）设置为第一启动项，并按F10保存退出。进入ArchLinux安装盘即可。&#xA;如果设备中包含NVIDIA显卡，请在进入liveCD的GRUB引导界面时按下键盘上的字母E,进入GRUB的编辑模式。在其linux行的末尾加入nouveau.modeset=0来屏蔽NVIDIA开源驱动。否则会出现加载nouveau模块报错和其他模块无法加载的问题。编辑完成后按CTRL+X退出。 如有疑问请参考Wiki以下章节：&#xA;获取安装映像&#xA;准备安装映像&#xA;启动到Live环境&#xA;一、验证引导模式 &amp;amp; 联网 &amp;amp; 换源： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 $ ls /sys/firmware/efi/efivars #验证引导模式（如果目录不存在，即为Legacy BIOS引导模式；反之，请使用隔壁以UEFI为例的教程） $ iwctl #运行iwctl（如果是台式机，可直接跳到ping -c 5 archlinux.org这一步） [iwctl]# device list #列出WiFi设备（一般为wlan0；这里以wlan0为例） [iwctl]# station wlan0 scan #扫描网络 [iwctl]# station wlan0 get-networks #列出可用网络 [iwctl]# station wlan0 connect X #连接到X（X改成你可用的WiFi名称并在回车后输入密码且确保密码输入正确） [iwctl]# exit #退出iwctl $ ping -c 5 archlinux.</description>
    </item>
  </channel>
</rss>
